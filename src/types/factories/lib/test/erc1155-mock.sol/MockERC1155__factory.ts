/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  MockERC1155,
  MockERC1155Interface,
} from "../../../../lib/test/erc1155-mock.sol/MockERC1155";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "batchMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50600280546001600160a01b0319163390811790915560405181906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3506117bc806100636000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c80634e1273f411610097578063bc197c8111610066578063bc197c811461024f578063e985e9c51461028a578063f23a6e61146102b5578063f242432a146102d557600080fd5b80634e1273f4146101c85780636352211e146101e85780638da5cb5b14610229578063a22cb4651461023c57600080fd5b806313af4035116100d357806313af40351461017a5780632eb2c2d61461018f57806340c10f19146101a25780634684d7e9146101b557600080fd5b8062fdd58e146100f957806301ffc9a7146101365780630e89341c14610159575b600080fd5b6101236101073660046113ea565b6000908152600160205260409020546001600160a01b03161490565b6040519081526020015b60405180910390f35b61014961014436600461147c565b6102e8565b604051901515815260200161012d565b61016d6101673660046114b4565b50606090565b60405161012d919061176d565b61018d61018836600461115d565b61033a565b005b61018d61019d3660046111b0565b6103d4565b61018d6101b03660046113ea565b610754565b61018d6101c33660046112dd565b6107bb565b6101db6101d6366004611413565b61081e565b60405161012d919061172c565b6102116101f63660046114b4565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161012d565b600254610211906001600160a01b031681565b61018d61024a3660046113b0565b610976565b61027161025d3660046111b0565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b0319909116815260200161012d565b61014961029836600461117e565b600060208181529281526040808220909352908152205460ff1681565b6102716102c3366004611267565b63f23a6e6160e01b9695505050505050565b61018d6102e3366004611267565b6109e0565b60006301ffc9a760e01b6001600160e01b0319831614806103195750636cdb3d1360e11b6001600160e01b03198316145b8061033457506303a24d0760e21b6001600160e01b03198316145b92915050565b6002546001600160a01b031633146103885760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600280546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b8483146104155760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161037f565b336001600160a01b038916148061044d57506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b61048a5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161037f565b60008060005b878110156105b5578888828181106104b857634e487b7160e01b600052603260045260246000fd5b9050602002013592508686828181106104e157634e487b7160e01b600052603260045260246000fd5b600086815260016020908152604090912054910292909201359350506001600160a01b038c81169116146105445760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161037f565b816001146105855760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161037f565b600083815260016020819052604090912080546001600160a01b0319166001600160a01b038d1617905501610490565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b6040516106099493929190611705565b60405180910390a46001600160a01b0389163b156106fe5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c819061065d9033908f908e908e908e908e908e908e906004016115c7565b602060405180830381600087803b15801561067757600080fd5b505af115801561068b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106af9190611498565b6001600160e01b031916146106f95760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161037f565b610748565b6001600160a01b0389166107485760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161037f565b50505050505050505050565b6002546001600160a01b0316331461079d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161037f565b6107b7828260405180602001604052806000815250610c93565b5050565b6002546001600160a01b031633146108045760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161037f565b6107b7828260405180602001604052806000815250610e85565b60608382146108615760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161037f565b8367ffffffffffffffff81111561088857634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156108b1578160200160208202803683370190505b50905060005b8481101561096d5761093a8686838181106108e257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906108f7919061115d565b85858481811061091757634e487b7160e01b600052603260045260246000fd5b905060200201356000908152600160205260409020546001600160a01b03161490565b82828151811061095a57634e487b7160e01b600052603260045260246000fd5b60209081029190910101526001016108b7565b50949350505050565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b336001600160a01b0387161480610a1857506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b610a555760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161037f565b6000848152600160205260409020546001600160a01b03878116911614610aab5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161037f565b82600114610aec5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161037f565b60008481526001602090815260409182902080546001600160a01b0319166001600160a01b038981169182179092558351888152928301879052929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b15610c415760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e6190610ba09033908b908a908a908a908a906004016116cc565b602060405180830381600087803b158015610bba57600080fd5b505af1158015610bce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bf29190611498565b6001600160e01b03191614610c3c5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161037f565b610c8b565b6001600160a01b038516610c8b5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161037f565b505050505050565b6000828152600160205260409020546001600160a01b031615610ce95760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161037f565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b03891690811790915581518781529283019390935291929133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0383163b15610e3b5760405163f23a6e6160e01b808252906001600160a01b0385169063f23a6e6190610d9a90339060009088906001908990600401611689565b602060405180830381600087803b158015610db457600080fd5b505af1158015610dc8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dec9190611498565b6001600160e01b03191614610e365760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161037f565b505050565b6001600160a01b038316610e365760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161037f565b815160008167ffffffffffffffff811115610eb057634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610ed9578160200160208202803683370190505b5090506000805b83811015610fcd57858181518110610f0857634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600081815260019092526040909120549092506001600160a01b031615610f6e5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161037f565b600082815260016020819052604090912080546001600160a01b0319166001600160a01b038a161790558351849083908110610fba57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101610ee0565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb888660405161101e92919061173f565b60405180910390a46001600160a01b0386163b1561106d5760405163bc197c8160e01b808252906001600160a01b0388169063bc197c8190610ba09033906000908b9089908c9060040161162b565b6001600160a01b038616610c8b5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161037f565b80356001600160a01b03811681146110ce57600080fd5b919050565b60008083601f8401126110e4578081fd5b50813567ffffffffffffffff8111156110fb578182fd5b6020830191508360208260051b850101111561111657600080fd5b9250929050565b60008083601f84011261112e578182fd5b50813567ffffffffffffffff811115611145578182fd5b60208301915083602082850101111561111657600080fd5b60006020828403121561116e578081fd5b611177826110b7565b9392505050565b60008060408385031215611190578081fd5b611199836110b7565b91506111a7602084016110b7565b90509250929050565b60008060008060008060008060a0898b0312156111cb578384fd5b6111d4896110b7565b97506111e260208a016110b7565b9650604089013567ffffffffffffffff808211156111fe578586fd5b61120a8c838d016110d3565b909850965060608b0135915080821115611222578586fd5b61122e8c838d016110d3565b909650945060808b0135915080821115611246578384fd5b506112538b828c0161111d565b999c989b5096995094979396929594505050565b60008060008060008060a0878903121561127f578182fd5b611288876110b7565b9550611296602088016110b7565b94506040870135935060608701359250608087013567ffffffffffffffff8111156112bf578283fd5b6112cb89828a0161111d565b979a9699509497509295939492505050565b600080604083850312156112ef578182fd5b6112f8836110b7565b915060208084013567ffffffffffffffff80821115611315578384fd5b818601915086601f830112611328578384fd5b81358181111561133a5761133a611780565b8060051b604051601f19603f8301168101818110858211171561135f5761135f611780565b604052828152858101935084860182860187018b101561137d578788fd5b8795505b8386101561139f578035855260019590950194938601938601611381565b508096505050505050509250929050565b600080604083850312156113c2578182fd5b6113cb836110b7565b9150602083013580151581146113df578182fd5b809150509250929050565b600080604083850312156113fc578182fd5b611405836110b7565b946020939093013593505050565b60008060008060408587031215611428578384fd5b843567ffffffffffffffff8082111561143f578586fd5b61144b888389016110d3565b90965094506020870135915080821115611463578384fd5b50611470878288016110d3565b95989497509550505050565b60006020828403121561148d578081fd5b813561117781611796565b6000602082840312156114a9578081fd5b815161117781611796565b6000602082840312156114c5578081fd5b5035919050565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156114fd578081fd5b8260051b80836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b838110156115485781518752958201959082019060010161152c565b509495945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008151808452815b818110156115a157602081850181015186830182015201611585565b818111156115b25782602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808b168352808a1660208401525060a060408301526115f460a08301888a6114cc565b82810360608401526116078187896114cc565b9050828103608084015261161c818587611553565b9b9a5050505050505050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261165760a0830186611519565b82810360608401526116698186611519565b9050828103608084015261167d818561157c565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a060808301526116c160a083018461157c565b979650505050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261167d60a083018486611553565b6040815260006117196040830186886114cc565b82810360208401526116c18185876114cc565b6020815260006111776020830184611519565b6040815260006117526040830185611519565b82810360208401526117648185611519565b95945050505050565b602081526000611177602083018461157c565b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146117ac57600080fd5b5056fea164736f6c6343000804000a";

type MockERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockERC1155__factory extends ContractFactory {
  constructor(...args: MockERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MockERC1155> {
    return super.deploy(overrides || {}) as Promise<MockERC1155>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): MockERC1155 {
    return super.attach(address) as MockERC1155;
  }
  override connect(signer: Signer): MockERC1155__factory {
    return super.connect(signer) as MockERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockERC1155Interface {
    return new utils.Interface(_abi) as MockERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockERC1155 {
    return new Contract(address, _abi, signerOrProvider) as MockERC1155;
  }
}
