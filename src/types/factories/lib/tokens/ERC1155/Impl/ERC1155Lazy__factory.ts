/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Lazy,
  ERC1155LazyInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Lazy";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "InvalidSigner",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "UsedVoucher",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newSigner",
        type: "address",
      },
    ],
    name: "SignerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "users",
            type: "address[]",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
        ],
        internalType: "struct Types.Voucher",
        name: "voucher",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "voucherId",
            type: "bytes32",
          },
          {
            internalType: "uint256[]",
            name: "ids",
            type: "uint256[]",
          },
          {
            internalType: "uint256",
            name: "price",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "user",
            type: "address",
          },
        ],
        internalType: "struct Types.UserBatch",
        name: "userBatch",
        type: "tuple",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "lazyMintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_signer",
        type: "address",
      },
    ],
    name: "setSigner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "usedVouchers",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405260016005553480156200001657600080fd5b506040516200333338038062003333833981016040819052620000399162000381565b600480546001600160a01b0319166001600160a01b0384169081179091556040518391906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a3504660805262000144604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b60a05262000152816200020e565b845162000167906008906020880190620002a6565b50600980546001600160a01b0386166001600160a01b031991821681179092556001600160601b03851660028190556003805490921690921790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a25050505050620004f7565b6004546001600160a01b031633146200025c5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640160405180910390fd5b600680546001600160a01b0319166001600160a01b0383169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b828054620002b490620004a4565b90600052602060002090601f016020900481019282620002d8576000855562000323565b82601f10620002f357805160ff191683800117855562000323565b8280016001018555821562000323579182015b828111156200032357825182559160200191906001019062000306565b506200033192915062000335565b5090565b5b8082111562000331576000815560010162000336565b80516001600160a01b03811681146200036457600080fd5b919050565b80516001600160601b03811681146200036457600080fd5b600080600080600060a0868803121562000399578081fd5b85516001600160401b0380821115620003b0578283fd5b818801915088601f830112620003c4578283fd5b815181811115620003d957620003d9620004e1565b604051601f8201601f19908116603f01168101908382118183101715620004045762000404620004e1565b81604052828152602093508b8484870101111562000420578586fd5b8591505b8282101562000443578482018401518183018501529083019062000424565b828211156200045457858484830101525b9850620004669150508882016200034c565b95505050620004786040870162000369565b925062000488606087016200034c565b915062000498608087016200034c565b90509295509295909350565b600181811c90821680620004b957607f821691505b60208210811415620004db57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160a051612e166200051d6000396000610c7401526000610b950152612e166000f3fe6080604052600436106101ab5760003560e01c80636352211e116100ec578063bc197c811161008a578063e985e9c511610064578063e985e9c514610525578063f23a6e611461055d578063f242432a1461058a578063f4f3b200146105aa57600080fd5b8063bc197c811461049a578063bfa556e4146104e2578063d24cecea1461051257600080fd5b80638da5cb5b116100c65780638da5cb5b1461041a578063a22cb4651461043a578063b2dc5dc31461045a578063b80f55c91461047a57600080fd5b80636352211e146103af5780636c19e783146103e55780637754305c1461040557600080fd5b80632a55205a116101595780633ccfd60b116101335780633ccfd60b146103225780633cd8045e146103375780634e1273f41461036f5780635fde50391461039c57600080fd5b80632a55205a146102ae5780632eb2c2d6146102ed5780633644e5151461030d57600080fd5b80630e89341c1161018a5780630e89341c1461024c57806313af40351461027957806318160ddd1461029957600080fd5b8062fdd58e146101b057806301ffc9a7146101fa57806302fe53051461022a575b600080fd5b3480156101bc57600080fd5b506101e76101cb36600461267a565b6000908152600160205260409020546001600160a01b03161490565b6040519081526020015b60405180910390f35b34801561020657600080fd5b5061021a610215366004612761565b6105ca565b60405190151581526020016101f1565b34801561023657600080fd5b5061024a610245366004612799565b610637565b005b34801561025857600080fd5b5061026c610267366004612749565b6106da565b6040516101f19190612c90565b34801561028557600080fd5b5061024a61029436600461246b565b610736565b3480156102a557600080fd5b506101e76107cb565b3480156102ba57600080fd5b506102ce6102c9366004612899565b6107db565b604080516001600160a01b0390931683526020830191909152016101f1565b3480156102f957600080fd5b5061024a6103083660046124c6565b610811565b34801561031957600080fd5b506101e7610b91565b34801561032e57600080fd5b5061024a610c96565b34801561034357600080fd5b50600954610357906001600160a01b031681565b6040516001600160a01b0390911681526020016101f1565b34801561037b57600080fd5b5061038f61038a3660046126a5565b610ceb565b6040516101f19190612c58565b61024a6103aa366004612826565b610e43565b3480156103bb57600080fd5b506103576103ca366004612749565b6001602052600090815260409020546001600160a01b031681565b3480156103f157600080fd5b5061024a61040036600461246b565b610f3c565b34801561041157600080fd5b5061026c610fcf565b34801561042657600080fd5b50600454610357906001600160a01b031681565b34801561044657600080fd5b5061024a610455366004612649565b611061565b34801561046657600080fd5b5061024a6104753660046125fb565b6110cb565b34801561048657600080fd5b5061024a61049536600461270e565b611169565b3480156104a657600080fd5b506104c96104b53660046124c6565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b031990911681526020016101f1565b3480156104ee57600080fd5b5061021a6104fd366004612749565b600a6020526000908152604090205460ff1681565b61024a610520366004612826565b61122c565b34801561053157600080fd5b5061021a61054036600461248e565b600060208181529281526040808220909352908152205460ff1681565b34801561056957600080fd5b506104c9610578366004612581565b63f23a6e6160e01b9695505050505050565b34801561059657600080fd5b5061024a6105a5366004612581565b61133d565b3480156105b657600080fd5b5061024a6105c536600461246b565b6115f0565b60006301ffc9a760e01b6001600160e01b0319831614806105fb5750636cdb3d1360e11b6001600160e01b03198316145b8061061657506303a24d0760e21b6001600160e01b03198316145b80610631575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146106855760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b8051610698906008906020840190612298565b50806040516106a79190612a05565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b60606106e46107cb565b82111561070457604051635d68437560e11b815260040160405180910390fd5b600861070f836116c0565b604051602001610720929190612a21565b6040516020818303038152906040529050919050565b6004546001600160a01b0316331461077f5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161067c565b600480546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b60006107d660075490565b905090565b6003546002546001600160a01b0390911690600090612710906107fe9085612d3c565b6108089190612d1c565b90509250929050565b8483146108525760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161067c565b336001600160a01b038916148061088a57506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b6108c75760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161067c565b60008060005b878110156109f2578888828181106108f557634e487b7160e01b600052603260045260246000fd5b90506020020135925086868281811061091e57634e487b7160e01b600052603260045260246000fd5b600086815260016020908152604090912054910292909201359350506001600160a01b038c81169116146109815760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161067c565b816001146109c25760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161067c565b600083815260016020819052604090912080546001600160a01b0319166001600160a01b038d16179055016108cd565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610a469493929190612c31565b60405180910390a46001600160a01b0389163b15610b3b5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610a9a9033908f908e908e908e908e908e908e90600401612af3565b602060405180830381600087803b158015610ab457600080fd5b505af1158015610ac8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aec919061277d565b6001600160e01b03191614610b365760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161067c565b610b85565b6001600160a01b038916610b855760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161067c565b50505050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000004614610c715750604080518082018252600381526213505160ea1b60209182015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fd211538c6f31815d8ce213b4050c32cfdac1ad46cfcae9bbf8e8d55bec8fed33818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c0909101909252815191012090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6004546001600160a01b03163314610cdf5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161067c565b610ce9324761170f565b565b6060838214610d2e5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161067c565b8367ffffffffffffffff811115610d5557634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610d7e578160200160208202803683370190505b50905060005b84811015610e3a57610e07868683818110610daf57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610dc4919061246b565b858584818110610de457634e487b7160e01b600052603260045260246000fd5b905060200201356000908152600160205260409020546001600160a01b03161490565b828281518110610e2757634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101610d84565b50949350505050565b600554600114610e825760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161067c565b60026005556000610e958585858561176a565b9050610ea181866118ab565b84356000908152600a602090815260408220805460ff19166001179055610eca90870187612ca3565b9050905060005b81811015610f2e57610f266040880135610eee60208a018a612ca3565b84818110610f0c57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610f21919061246b565b61195e565b600101610ed1565b505060016005555050505050565b6004546001600160a01b03163314610f855760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161067c565b600680546001600160a01b0319166001600160a01b0383169081179091556040517f5553331329228fbd4123164423717a4a7539f6dfa1c3279a923b98fd681a6c7390600090a250565b606060088054610fde90612d93565b80601f016020809104026020016040519081016040528092919081815260200182805461100a90612d93565b80156110575780601f1061102c57610100808354040283529160200191611057565b820191906000526020600020905b81548152906001019060200180831161103a57829003601f168201915b5050505050905090565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6004546001600160a01b031633146111145760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161067c565b80516000905b808210156111375761112c6007611992565b81600101915061111a565b80821015611159576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b61116384846119ec565b50505050565b6004546001600160a01b031633146111b25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161067c565b80516000905b80821015611205576111ca6007611992565b6111fa8383815181106111ed57634e487b7160e01b600052603260045260246000fd5b6020026020010151611bdf565b8160010191506111b8565b80821015611227576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b505050565b60055460011461126b5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161067c565b6002600555600061127e85858585611cab565b905061128a8186611d5b565b84356000908152600a602090815260408220805460ff191660011790556112b390870187612ca3565b9050905060005b818110156112d8576112d0600780546001019055565b6001016112ba565b610f2e6112eb6080890160608a0161246b565b6112f860208a018a612ca3565b80806020026020016040519081016040528093929190818152602001838360200280828437600092018290525060408051602081019091529081529250611ddc915050565b336001600160a01b038716148061137557506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6113b25760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161067c565b6000848152600160205260409020546001600160a01b038781169116146114085760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161067c565b826001146114495760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161067c565b60008481526001602090815260409182902080546001600160a01b0319166001600160a01b038981169182179092558351888152928301879052929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b1561159e5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906114fd9033908b908a908a908a908a90600401612bf8565b602060405180830381600087803b15801561151757600080fd5b505af115801561152b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061154f919061277d565b6001600160e01b031916146115995760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161067c565b6115e8565b6001600160a01b0385166115e85760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161067c565b505050505050565b6004546001600160a01b031633146116395760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161067c565b6040516370a0823160e01b81523060048201526116bd90829032906001600160a01b038316906370a082319060240160206040518083038186803b15801561168057600080fd5b505afa158015611694573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116b89190612881565b61200e565b50565b604080516080810191829052607f0190826030600a8206018353600a90045b80156116fd57600183039250600a81066030018353600a90046116df565b50819003601f19909101908152919050565b600080600080600085875af19050806112275760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c454400000000000000000000000000604482015260640161067c565b60006001611776610b91565b7fad272c3a554b50b54e1fc8b13b2c376323e15b1af7eca2e20a56272dea6da99e87356117a660208a018a612ca3565b6040516020016117b7929190612999565b60408051808303601f19018152828252805160209182012090830194909452818101929092526060808201939093529089013560808201529088013560a082015260c0015b6040516020818303038152906040528051906020012060405160200161183992919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015611897573d6000803e3d6000fd5b5050604051601f1901519695505050505050565b6006546001600160a01b038381169116146118d957604051632057875960e21b815260040160405180910390fd5b80356000908152600a602052604090205460ff161515600114156119105760405163e647f41360e01b815260040160405180910390fd5b61191d6020820182612ca3565b905061193160408301356060840135612d3c565b61193b9190612d3c565b341461195a5760405163f7760f2560e01b815260040160405180910390fd5b5050565b60005b828110156112275761198a82611975612094565b604051806020016040528060008152506120ab565b600101611961565b8054806119e15760405162461bcd60e51b815260206004820152601260248201527f44454352454d454e545f4f564552464c4f570000000000000000000000000000604482015260640161067c565b508054600019019055565b6001600160a01b038216611a425760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d0000000000000000000000000000000000000000604482015260640161067c565b805160008167ffffffffffffffff811115611a6d57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611a96578160200160208202803683370190505b5090506000805b83811015611b7f57848181518110611ac557634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600081815260019092526040909120549092506001600160a01b03878116911614611b2b5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161067c565b600082815260016020819052604090912080546001600160a01b03191690558351849083908110611b6c57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101611a9d565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8786604051611bd0929190612c6b565b60405180910390a45050505050565b6000818152600160205260409020546001600160a01b031680611c445760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f4d494e54454400000000000000000000000000000000000000000000604482015260640161067c565b600082815260016020818152604080842080546001600160a01b03191690558051868152918201929092526001600160a01b0384169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050565b60006001611cb7610b91565b7fb011fab3ad4473b2bcf5d6f51416ccbe1783124fbce523be4ac681ed63a0b0ba8735611ce760208a018a612ca3565b604051602001611cf89291906129db565b6040516020818303038152906040528051906020012089604001358a6060016020810190611d26919061246b565b604080516020810196909652850193909352606084019190915260808301526001600160a01b031660a082015260c0016117fc565b6006546001600160a01b03838116911614611d8957604051632057875960e21b815260040160405180910390fd5b80356000908152600a602052604090205460ff16151560011415611dc05760405163e647f41360e01b815260040160405180910390fd5b611dcd6020820182612ca3565b61193b91506040830135612d3c565b815160008167ffffffffffffffff811115611e0757634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611e30578160200160208202803683370190505b5090506000805b83811015611f2457858181518110611e5f57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600081815260019092526040909120549092506001600160a01b031615611ec55760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161067c565b600082815260016020819052604090912080546001600160a01b0319166001600160a01b038a161790558351849083908110611f1157634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101611e37565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8886604051611f75929190612c6b565b60405180910390a46001600160a01b0386163b15611fc45760405163bc197c8160e01b808252906001600160a01b0388169063bc197c81906114fd9033906000908b9089908c90600401612b57565b6001600160a01b0386166115e85760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161067c565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806111635760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161067c565b60006120a4600780546001019055565b5060075490565b6000828152600160205260409020546001600160a01b0316156121015760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161067c565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b03891690811790915581518781529283019390935291929133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0383163b1561224e5760405163f23a6e6160e01b808252906001600160a01b0385169063f23a6e61906121b290339060009088906001908990600401612bb5565b602060405180830381600087803b1580156121cc57600080fd5b505af11580156121e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612204919061277d565b6001600160e01b031916146112275760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161067c565b6001600160a01b0383166112275760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161067c565b8280546122a490612d93565b90600052602060002090601f0160209004810192826122c6576000855561230c565b82601f106122df57805160ff191683800117855561230c565b8280016001018555821561230c579182015b8281111561230c5782518255916020019190600101906122f1565b5061231892915061231c565b5090565b5b80821115612318576000815560010161231d565b60008083601f840112612342578182fd5b50813567ffffffffffffffff811115612359578182fd5b6020830191508360208260051b850101111561237457600080fd5b9250929050565b600082601f83011261238b578081fd5b8135602067ffffffffffffffff8211156123a7576123a7612dc8565b8160051b6123b6828201612ceb565b8381528281019086840183880185018910156123d0578687fd5b8693505b858410156123f25780358352600193909301929184019184016123d4565b50979650505050505050565b60008083601f84011261240f578182fd5b50813567ffffffffffffffff811115612426578182fd5b60208301915083602082850101111561237457600080fd5b60006080828403121561244f578081fd5b50919050565b803560ff8116811461246657600080fd5b919050565b60006020828403121561247c578081fd5b813561248781612dde565b9392505050565b600080604083850312156124a0578081fd5b82356124ab81612dde565b915060208301356124bb81612dde565b809150509250929050565b60008060008060008060008060a0898b0312156124e1578384fd5b88356124ec81612dde565b975060208901356124fc81612dde565b9650604089013567ffffffffffffffff80821115612518578586fd5b6125248c838d01612331565b909850965060608b013591508082111561253c578586fd5b6125488c838d01612331565b909650945060808b0135915080821115612560578384fd5b5061256d8b828c016123fe565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215612599578182fd5b86356125a481612dde565b955060208701356125b481612dde565b94506040870135935060608701359250608087013567ffffffffffffffff8111156125dd578283fd5b6125e989828a016123fe565b979a9699509497509295939492505050565b6000806040838503121561260d578182fd5b823561261881612dde565b9150602083013567ffffffffffffffff811115612633578182fd5b61263f8582860161237b565b9150509250929050565b6000806040838503121561265b578182fd5b823561266681612dde565b9150602083013580151581146124bb578182fd5b6000806040838503121561268c578081fd5b823561269781612dde565b946020939093013593505050565b600080600080604085870312156126ba578182fd5b843567ffffffffffffffff808211156126d1578384fd5b6126dd88838901612331565b909650945060208701359150808211156126f5578384fd5b5061270287828801612331565b95989497509550505050565b60006020828403121561271f578081fd5b813567ffffffffffffffff811115612735578182fd5b6127418482850161237b565b949350505050565b60006020828403121561275a578081fd5b5035919050565b600060208284031215612772578081fd5b813561248781612df3565b60006020828403121561278e578081fd5b815161248781612df3565b600060208083850312156127ab578182fd5b823567ffffffffffffffff808211156127c2578384fd5b818501915085601f8301126127d5578384fd5b8135818111156127e7576127e7612dc8565b6127f9601f8201601f19168501612ceb565b9150808252868482850101111561280e578485fd5b80848401858401378101909201929092529392505050565b6000806000806080858703121561283b578182fd5b843567ffffffffffffffff811115612851578283fd5b61285d8782880161243e565b94505061286c60208601612455565b93969395505050506040820135916060013590565b600060208284031215612892578081fd5b5051919050565b600080604083850312156128ab578182fd5b50508035926020909101359150565b81835260006001600160fb1b038311156128d2578081fd5b8260051b80836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b8381101561291d57815187529582019590820190600101612901565b509495945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008151808452612969816020860160208601612d67565b601f01601f19169290920160200192915050565b6000815161298f818560208601612d67565b9290920192915050565b60008184825b858110156129d05781356129b281612dde565b6001600160a01b03168352602092830192919091019060010161299f565b509095945050505050565b60006001600160fb1b038311156129f0578081fd5b8260051b808584379190910190815292915050565b60008251612a17818460208701612d67565b9190910192915050565b600080845482600182811c915080831680612a3d57607f831692505b6020808410821415612a5d57634e487b7160e01b87526022600452602487fd5b818015612a715760018114612a8257612aae565b60ff19861689528489019650612aae565b60008b815260209020885b86811015612aa65781548b820152908501908301612a8d565b505084890196505b505050505050612aea612ac1828661297d565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b95945050505050565b60006001600160a01b03808b168352808a1660208401525060a06040830152612b2060a08301888a6128ba565b8281036060840152612b338187896128ba565b90508281036080840152612b48818587612928565b9b9a5050505050505050505050565b60006001600160a01b03808816835280871660208401525060a06040830152612b8360a08301866128ee565b8281036060840152612b9581866128ee565b90508281036080840152612ba98185612951565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152612bed60a0830184612951565b979650505050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a06080830152612ba960a083018486612928565b604081526000612c456040830186886128ba565b8281036020840152612bed8185876128ba565b60208152600061248760208301846128ee565b604081526000612c7e60408301856128ee565b8281036020840152612aea81856128ee565b6020815260006124876020830184612951565b6000808335601e19843603018112612cb9578283fd5b83018035915067ffffffffffffffff821115612cd3578283fd5b6020019150600581901b360382131561237457600080fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715612d1457612d14612dc8565b604052919050565b600082612d3757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612d6257634e487b7160e01b81526011600452602481fd5b500290565b60005b83811015612d82578181015183820152602001612d6a565b838111156111635750506000910152565b600181811c90821680612da757607f821691505b6020821081141561244f57634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146116bd57600080fd5b6001600160e01b0319811681146116bd57600080fdfea164736f6c6343000804000a";

type ERC1155LazyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155LazyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Lazy__factory extends ContractFactory {
  constructor(...args: ERC1155LazyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Lazy> {
    return super.deploy(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      overrides || {}
    ) as Promise<ERC1155Lazy>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    _signer: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _splitter,
      _fraction,
      _router,
      _signer,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Lazy {
    return super.attach(address) as ERC1155Lazy;
  }
  override connect(signer: Signer): ERC1155Lazy__factory {
    return super.connect(signer) as ERC1155Lazy__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155LazyInterface {
    return new utils.Interface(_abi) as ERC1155LazyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Lazy {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Lazy;
  }
}
