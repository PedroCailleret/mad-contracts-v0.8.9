/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Basic,
  ERC1155BasicInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Basic";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MaxSupplyReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016005553480156200001657600080fd5b5060405162002d0c38038062002d0c83398101604081905262000039916200023f565b600480546001600160a01b0319166001600160a01b0383169081179091556040518291906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35085516200009b90600790602089019062000164565b5060088590556009849055600a8054610100600160a81b0319166101006001600160a01b03868116820292909217928390556001600160601b038516600281905560038054929094049092166001600160a01b0319909116179091556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050620003b5565b828054620001729062000362565b90600052602060002090601f016020900481019282620001965760008555620001e1565b82601f10620001b157805160ff1916838001178555620001e1565b82800160010185558215620001e1579182015b82811115620001e1578251825591602001919060010190620001c4565b50620001ef929150620001f3565b5090565b5b80821115620001ef5760008155600101620001f4565b80516001600160a01b03811681146200022257600080fd5b919050565b80516001600160601b03811681146200022257600080fd5b60008060008060008060c0878903121562000258578182fd5b86516001600160401b03808211156200026f578384fd5b818901915089601f83011262000283578384fd5b8151818111156200029857620002986200039f565b604051601f8201601f19908116603f01168101908382118183101715620002c357620002c36200039f565b81604052828152602093508c84848701011115620002df578687fd5b8691505b82821015620003025784820184015181830185015290830190620002e3565b828211156200031357868484830101525b809a5050505080890151965050506040870151935062000336606088016200020a565b9250620003466080880162000227565b91506200035660a088016200020a565b90509295509295509295565b600181811c908216806200037757607f821691505b602082108114156200039957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61294780620003c56000396000f3fe6080604052600436106101b65760003560e01c8063879fbedf116100ec578063bc197c811161008a578063f23a6e6111610064578063f23a6e611461055b578063f242432a14610588578063f4f3b200146105a8578063ffb2b55a146105c857600080fd5b8063bc197c81146104c5578063d5abeb011461050d578063e985e9c51461052357600080fd5b8063a0712d68116100c6578063a0712d6814610452578063a22cb46514610465578063b2dc5dc314610485578063b80f55c9146104a557600080fd5b8063879fbedf146103fc5780638da5cb5b1461041c578063a035b1fe1461043c57600080fd5b80632a55205a116101595780633cd8045e116101335780633cd8045e146103475780634e1273f4146103845780636352211e146103b15780637754305c146103e757600080fd5b80632a55205a146102d35780632eb2c2d6146103125780633ccfd60b1461033257600080fd5b80630e89341c116101955780630e89341c1461025757806313af40351461028457806318160ddd146102a457806322ab47a1146102b957600080fd5b8062fdd58e146101bb57806301ffc9a71461020557806302fe530514610235575b600080fd5b3480156101c757600080fd5b506101f26101d636600461225f565b6000908152600160205260409020546001600160a01b03161490565b6040519081526020015b60405180910390f35b34801561021157600080fd5b50610225610220366004612348565b6105db565b60405190151581526020016101fc565b34801561024157600080fd5b50610255610250366004612380565b610648565b005b34801561026357600080fd5b5061027761027236600461240d565b6106eb565b6040516101fc91906127e1565b34801561029057600080fd5b5061025561029f366004612056565b610747565b3480156102b057600080fd5b506101f26107dc565b3480156102c557600080fd5b50600a546102259060ff1681565b3480156102df57600080fd5b506102f36102ee36600461243d565b6107ec565b604080516001600160a01b0390931683526020830191909152016101fc565b34801561031e57600080fd5b5061025561032d3660046120b1565b610822565b34801561033e57600080fd5b50610255610ba2565b34801561035357600080fd5b50600a5461036c9061010090046001600160a01b031681565b6040516001600160a01b0390911681526020016101fc565b34801561039057600080fd5b506103a461039f36600461228a565b610bf7565b6040516101fc91906127a9565b3480156103bd57600080fd5b5061036c6103cc36600461240d565b6001602052600090815260409020546001600160a01b031681565b3480156103f357600080fd5b50610277610d4f565b34801561040857600080fd5b5061025561041736600461232e565b610de1565b34801561042857600080fd5b5060045461036c906001600160a01b031681565b34801561044857600080fd5b506101f260085481565b61025561046036600461240d565b610e67565b34801561047157600080fd5b50610255610480366004612234565b610f93565b34801561049157600080fd5b506102556104a03660046121e6565b610ffd565b3480156104b157600080fd5b506102556104c03660046122f3565b61109b565b3480156104d157600080fd5b506104f46104e03660046120b1565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b031990911681526020016101fc565b34801561051957600080fd5b506101f260095481565b34801561052f57600080fd5b5061022561053e366004612079565b600060208181529281526040808220909352908152205460ff1681565b34801561056757600080fd5b506104f461057636600461216c565b63f23a6e6160e01b9695505050505050565b34801561059457600080fd5b506102556105a336600461216c565b61115e565b3480156105b457600080fd5b506102556105c3366004612056565b611411565b6102556105d63660046122f3565b6114e1565b60006301ffc9a760e01b6001600160e01b03198316148061060c5750636cdb3d1360e11b6001600160e01b03198316145b8061062757506303a24d0760e21b6001600160e01b03198316145b80610642575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b031633146106965760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b80516106a9906007906020840190611e9b565b50806040516106b89190612556565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b60606106f56107dc565b82111561071557604051635d68437560e11b815260040160405180910390fd5b6007610720836115ba565b604051602001610731929190612572565b6040516020818303038152906040529050919050565b6004546001600160a01b031633146107905760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161068d565b600480546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b60006107e760065490565b905090565b6003546002546001600160a01b03909116906000906127109061080f908561285d565b610819919061283d565b90509250929050565b8483146108635760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161068d565b336001600160a01b038916148061089b57506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b6108d85760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161068d565b60008060005b87811015610a035788888281811061090657634e487b7160e01b600052603260045260246000fd5b90506020020135925086868281811061092f57634e487b7160e01b600052603260045260246000fd5b600086815260016020908152604090912054910292909201359350506001600160a01b038c81169116146109925760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161068d565b816001146109d35760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161068d565b600083815260016020819052604090912080546001600160a01b0319166001600160a01b038d16179055016108de565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610a579493929190612782565b60405180910390a46001600160a01b0389163b15610b4c5760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610aab9033908f908e908e908e908e908e908e90600401612644565b602060405180830381600087803b158015610ac557600080fd5b505af1158015610ad9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afd9190612364565b6001600160e01b03191614610b475760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161068d565b610b96565b6001600160a01b038916610b965760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161068d565b50505050505050505050565b6004546001600160a01b03163314610beb5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161068d565b610bf53247611609565b565b6060838214610c3a5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b604482015260640161068d565b8367ffffffffffffffff811115610c6157634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610c8a578160200160208202803683370190505b50905060005b84811015610d4657610d13868683818110610cbb57634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610cd09190612056565b858584818110610cf057634e487b7160e01b600052603260045260246000fd5b905060200201356000908152600160205260409020546001600160a01b03161490565b828281518110610d3357634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101610c90565b50949350505050565b606060078054610d5e906128a8565b80601f0160208091040260200160405190810160405280929190818152602001828054610d8a906128a8565b8015610dd75780601f10610dac57610100808354040283529160200191610dd7565b820191906000526020600020905b815481529060010190602001808311610dba57829003601f168201915b5050505050905090565b6004546001600160a01b03163314610e2a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161068d565b600a805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b600554600114610ea65760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161068d565b6002600555600a5460ff16610ece576040516316851fc760e11b815260040160405180910390fd5b8060095481610edb6107dc565b610ee59190612825565b1115610f045760405163d05cb60960e01b815260040160405180910390fd5b6008548234610f13828461285d565b14610f315760405163f7760f2560e01b815260040160405180910390fd5b60005b84811015610f6557610f5d33610f48611664565b6040518060200160405280600081525061167b565b600101610f34565b84811015610f87576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b50506001600555505050565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6004546001600160a01b031633146110465760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161068d565b80516000905b808210156110695761105e6006611868565b81600101915061104c565b8082101561108b576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b61109584846118c2565b50505050565b6004546001600160a01b031633146110e45760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161068d565b80516000905b80821015611137576110fc6006611868565b61112c83838151811061111f57634e487b7160e01b600052603260045260246000fd5b6020026020010151611ab5565b8160010191506110ea565b80821015611159576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b505050565b336001600160a01b038716148061119657506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6111d35760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b604482015260640161068d565b6000848152600160205260409020546001600160a01b038781169116146112295760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161068d565b8260011461126a5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b604482015260640161068d565b60008481526001602090815260409182902080546001600160a01b0319166001600160a01b038981169182179092558351888152928301879052929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b156113bf5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e619061131e9033908b908a908a908a908a90600401612749565b602060405180830381600087803b15801561133857600080fd5b505af115801561134c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113709190612364565b6001600160e01b031916146113ba5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161068d565b611409565b6001600160a01b0385166114095760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161068d565b505050505050565b6004546001600160a01b0316331461145a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b604482015260640161068d565b6040516370a0823160e01b81523060048201526114de90829032906001600160a01b038316906370a082319060240160206040518083038186803b1580156114a157600080fd5b505afa1580156114b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114d99190612425565b611b81565b50565b6005546001146115205760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b604482015260640161068d565b6002600555600a5460ff16611548576040516316851fc760e11b815260040160405180910390fd5b805161155381611c07565b60005b818110156115745761156c600680546001019055565b600101611556565b81811015611596576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b6115b0338460405180602001604052806000815250611c69565b5050600160055550565b604080516080810191829052607f0190826030600a8206018353600a90045b80156115f757600183039250600a81066030018353600a90046115d9565b50819003601f19909101908152919050565b600080600080600085875af19050806111595760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c454400000000000000000000000000604482015260640161068d565b6000611674600680546001019055565b5060065490565b6000828152600160205260409020546001600160a01b0316156116d15760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161068d565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b03891690811790915581518781529283019390935291929133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0383163b1561181e5760405163f23a6e6160e01b808252906001600160a01b0385169063f23a6e619061178290339060009088906001908990600401612706565b602060405180830381600087803b15801561179c57600080fd5b505af11580156117b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d49190612364565b6001600160e01b031916146111595760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b604482015260640161068d565b6001600160a01b0383166111595760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161068d565b8054806118b75760405162461bcd60e51b815260206004820152601260248201527f44454352454d454e545f4f564552464c4f570000000000000000000000000000604482015260640161068d565b508054600019019055565b6001600160a01b0382166119185760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d0000000000000000000000000000000000000000604482015260640161068d565b805160008167ffffffffffffffff81111561194357634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561196c578160200160208202803683370190505b5090506000805b83811015611a555784818151811061199b57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600081815260019092526040909120549092506001600160a01b03878116911614611a015760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b604482015260640161068d565b600082815260016020819052604090912080546001600160a01b03191690558351849083908110611a4257634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101611973565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8786604051611aa69291906127bc565b60405180910390a45050505050565b6000818152600160205260409020546001600160a01b031680611b1a5760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f4d494e54454400000000000000000000000000000000000000000000604482015260640161068d565b600082815260016020818152604080842080546001600160a01b03191690558051868152918201929092526001600160a01b0384169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d11600160005114161716915050806110955760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015260640161068d565b3481600854611c16919061285d565b14611c345760405163f7760f2560e01b815260040160405180910390fd5b60095481611c406107dc565b611c4a9190612825565b11156114de5760405163d05cb60960e01b815260040160405180910390fd5b815160008167ffffffffffffffff811115611c9457634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015611cbd578160200160208202803683370190505b5090506000805b83811015611db157858181518110611cec57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600081815260019092526040909120549092506001600160a01b031615611d525760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b604482015260640161068d565b600082815260016020819052604090912080546001600160a01b0319166001600160a01b038a161790558351849083908110611d9e57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101611cc4565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8886604051611e029291906127bc565b60405180910390a46001600160a01b0386163b15611e515760405163bc197c8160e01b808252906001600160a01b0388169063bc197c819061131e9033906000908b9089908c906004016126a8565b6001600160a01b0386166114095760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b604482015260640161068d565b828054611ea7906128a8565b90600052602060002090601f016020900481019282611ec95760008555611f0f565b82601f10611ee257805160ff1916838001178555611f0f565b82800160010185558215611f0f579182015b82811115611f0f578251825591602001919060010190611ef4565b50611f1b929150611f1f565b5090565b5b80821115611f1b5760008155600101611f20565b60008083601f840112611f45578182fd5b50813567ffffffffffffffff811115611f5c578182fd5b6020830191508360208260051b8501011115611f7757600080fd5b9250929050565b600082601f830112611f8e578081fd5b8135602067ffffffffffffffff821115611faa57611faa6128f9565b8160051b611fb98282016127f4565b838152828101908684018388018501891015611fd3578687fd5b8693505b85841015611ff5578035835260019390930192918401918401611fd7565b50979650505050505050565b8035801515811461201157600080fd5b919050565b60008083601f840112612027578182fd5b50813567ffffffffffffffff81111561203e578182fd5b602083019150836020828501011115611f7757600080fd5b600060208284031215612067578081fd5b81356120728161290f565b9392505050565b6000806040838503121561208b578081fd5b82356120968161290f565b915060208301356120a68161290f565b809150509250929050565b60008060008060008060008060a0898b0312156120cc578384fd5b88356120d78161290f565b975060208901356120e78161290f565b9650604089013567ffffffffffffffff80821115612103578586fd5b61210f8c838d01611f34565b909850965060608b0135915080821115612127578586fd5b6121338c838d01611f34565b909650945060808b013591508082111561214b578384fd5b506121588b828c01612016565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215612184578182fd5b863561218f8161290f565b9550602087013561219f8161290f565b94506040870135935060608701359250608087013567ffffffffffffffff8111156121c8578283fd5b6121d489828a01612016565b979a9699509497509295939492505050565b600080604083850312156121f8578182fd5b82356122038161290f565b9150602083013567ffffffffffffffff81111561221e578182fd5b61222a85828601611f7e565b9150509250929050565b60008060408385031215612246578182fd5b82356122518161290f565b915061081960208401612001565b60008060408385031215612271578182fd5b823561227c8161290f565b946020939093013593505050565b6000806000806040858703121561229f578384fd5b843567ffffffffffffffff808211156122b6578586fd5b6122c288838901611f34565b909650945060208701359150808211156122da578384fd5b506122e787828801611f34565b95989497509550505050565b600060208284031215612304578081fd5b813567ffffffffffffffff81111561231a578182fd5b61232684828501611f7e565b949350505050565b60006020828403121561233f578081fd5b61207282612001565b600060208284031215612359578081fd5b813561207281612924565b600060208284031215612375578081fd5b815161207281612924565b60006020808385031215612392578182fd5b823567ffffffffffffffff808211156123a9578384fd5b818501915085601f8301126123bc578384fd5b8135818111156123ce576123ce6128f9565b6123e0601f8201601f191685016127f4565b915080825286848285010111156123f5578485fd5b80848401858401378101909201929092529392505050565b60006020828403121561241e578081fd5b5035919050565b600060208284031215612436578081fd5b5051919050565b6000806040838503121561244f578182fd5b50508035926020909101359150565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83111561248f578081fd5b8260051b80836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b838110156124da578151875295820195908201906001016124be565b509495945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000815180845261252681602086016020860161287c565b601f01601f19169290920160200192915050565b6000815161254c81856020860161287c565b9290920192915050565b6000825161256881846020870161287c565b9190910192915050565b600080845482600182811c91508083168061258e57607f831692505b60208084108214156125ae57634e487b7160e01b87526022600452602487fd5b8180156125c257600181146125d3576125ff565b60ff198616895284890196506125ff565b60008b815260209020885b868110156125f75781548b8201529085019083016125de565b505084890196505b50505050505061263b612612828661253a565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b95945050505050565b60006001600160a01b03808b168352808a1660208401525060a0604083015261267160a08301888a61245e565b828103606084015261268481878961245e565b905082810360808401526126998185876124e5565b9b9a5050505050505050505050565b60006001600160a01b03808816835280871660208401525060a060408301526126d460a08301866124ab565b82810360608401526126e681866124ab565b905082810360808401526126fa818561250e565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261273e60a083018461250e565b979650505050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a060808301526126fa60a0830184866124e5565b60408152600061279660408301868861245e565b828103602084015261273e81858761245e565b60208152600061207260208301846124ab565b6040815260006127cf60408301856124ab565b828103602084015261263b81856124ab565b602081526000612072602083018461250e565b604051601f8201601f1916810167ffffffffffffffff8111828210171561281d5761281d6128f9565b604052919050565b60008219821115612838576128386128e3565b500190565b60008261285857634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615612877576128776128e3565b500290565b60005b8381101561289757818101518382015260200161287f565b838111156110955750506000910152565b600181811c908216806128bc57607f821691505b602082108114156128dd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b03811681146114de57600080fd5b6001600160e01b0319811681146114de57600080fdfea164736f6c6343000804000a";

type ERC1155BasicConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155BasicConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Basic__factory extends ContractFactory {
  constructor(...args: ERC1155BasicConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Basic> {
    return super.deploy(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    ) as Promise<ERC1155Basic>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Basic {
    return super.attach(address) as ERC1155Basic;
  }
  override connect(signer: Signer): ERC1155Basic__factory {
    return super.connect(signer) as ERC1155Basic__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155BasicInterface {
    return new utils.Interface(_abi) as ERC1155BasicInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Basic {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Basic;
  }
}
