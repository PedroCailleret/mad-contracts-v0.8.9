/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Whitelist,
  ERC1155WhitelistInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Whitelist";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AddressDenied",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [],
    name: "FreeClaimClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "LoopOverflow",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxFreeReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxMintReached",
    type: "error",
  },
  {
    inputs: [],
    name: "MaxWhitelistReached",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WhitelistMintClosed",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "freeClaimState",
        type: "bool",
      },
    ],
    name: "FreeClaimStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFreeAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newMaxFree",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "FreeConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newWhitelistPrice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newMaxWhitelistSupply",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "WhitelistConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newWhitelistState",
        type: "bool",
      },
    ],
    name: "WhitelistMintStateSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimFree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimListMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeClaimState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_freeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFree",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_claimListMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "freeConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "freeSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "giftTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFree",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWhitelistSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "mintBatchToCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintToCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_freeClaimState",
        type: "bool",
      },
    ],
    name: "setFreeClaimState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_whitelistMintState",
        type: "bool",
      },
    ],
    name: "setWhitelistMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "whitelistConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016005553480156200001657600080fd5b5060405162003c6538038062003c6583398101604081905262000039916200023f565b600480546001600160a01b0319166001600160a01b0383169081179091556040518291906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35085516200009b90600790602089019062000164565b5060088590556009849055600a8054610100600160a81b0319166101006001600160a01b03868116820292909217928390556001600160601b038516600281905560038054929094049092166001600160a01b0319909116179091556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050620003b5565b828054620001729062000362565b90600052602060002090601f016020900481019282620001965760008555620001e1565b82601f10620001b157805160ff1916838001178555620001e1565b82800160010185558215620001e1579182015b82811115620001e1578251825591602001919060010190620001c4565b50620001ef929150620001f3565b5090565b5b80821115620001ef5760008155600101620001f4565b80516001600160a01b03811681146200022257600080fd5b919050565b80516001600160601b03811681146200022257600080fd5b60008060008060008060c0878903121562000258578182fd5b86516001600160401b03808211156200026f578384fd5b818901915089601f83011262000283578384fd5b8151818111156200029857620002986200039f565b604051601f8201601f19908116603f01168101908382118183101715620002c357620002c36200039f565b81604052828152602093508c84848701011115620002df578687fd5b8691505b82821015620003025784820184015181830185015290830190620002e3565b828211156200031357868484830101525b809a5050505080890151965050506040870151935062000336606088016200020a565b9250620003466080880162000227565b91506200035660a088016200020a565b90509295509295509295565b600181811c908216806200037757607f821691505b602082108114156200039957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6138a080620003c56000396000f3fe60806040526004361061031d5760003560e01c80637e62f3b3116101a5578063b80f55c9116100ec578063e985e9c511610095578063f242432a1161006f578063f242432a14610913578063f4f3b20014610933578063fc1a1c3614610953578063ffb2b55a1461096957600080fd5b8063e985e9c51461088e578063ef4eb030146108c6578063f23a6e61146108e657600080fd5b8063c884ef83116100c6578063c884ef8314610828578063c890476714610858578063d5abeb011461087857600080fd5b8063b80f55c9146107a0578063bc197c81146107c0578063c6a768f41461080857600080fd5b8063953f049d1161014e578063a945bf8011610128578063a945bf8014610754578063aa98e0c61461076a578063b2dc5dc31461078057600080fd5b8063953f049d1461070b578063a0712d6814610721578063a22cb4651461073457600080fd5b80638990694f1161017f5780638990694f146106bb5780638da5cb5b146106d1578063922400ff146106f157600080fd5b80637e62f3b31461065b57806386997e7d1461067b578063879fbedf1461069b57600080fd5b80632eb2c2d6116102695780634e1273f4116102125780636352211e116101ec5780636352211e146105f0578063640da9ed146106265780637754305c1461064657600080fd5b80634e1273f41461059d57806358381669146105ca57806358800e24146105dd57600080fd5b80633cd8045e116102435780633cd8045e1461052a578063440754d814610567578063485a68a31461058757600080fd5b80632eb2c2d6146104df578063326f9ad3146104ff5780633ccfd60b1461051557600080fd5b806313af4035116102cb57806324a6ab0c116102a557806324a6ab0c1461046a57806327c19186146104805780632a55205a146104a057600080fd5b806313af40351461041b57806318160ddd1461043b57806322ab47a11461045057600080fd5b80630451a9f1116102fc5780630451a9f1146103be5780630e89341c146103d4578063121c87811461040157600080fd5b8062fdd58e1461032257806301ffc9a71461036c57806302fe53051461039c575b600080fd5b34801561032e57600080fd5b5061035961033d366004613085565b6000908152600160205260409020546001600160a01b03161490565b6040519081526020015b60405180910390f35b34801561037857600080fd5b5061038c610387366004613214565b61097c565b6040519015158152602001610363565b3480156103a857600080fd5b506103bc6103b736600461324c565b6109e9565b005b3480156103ca57600080fd5b5061035960145481565b3480156103e057600080fd5b506103f46103ef3660046132d9565b610a8c565b6040516103639190613723565b34801561040d57600080fd5b5060135461038c9060ff1681565b34801561042757600080fd5b506103bc610436366004612e7c565b610add565b34801561044757600080fd5b50610359610b72565b34801561045c57600080fd5b50600a5461038c9060ff1681565b34801561047657600080fd5b5061035960115481565b34801561048c57600080fd5b506103bc61049b36600461332a565b610b82565b3480156104ac57600080fd5b506104c06104bb366004613309565b610c16565b604080516001600160a01b039093168352602083019190915201610363565b3480156104eb57600080fd5b506103bc6104fa366004612ed7565b610c4c565b34801561050b57600080fd5b5061035960125481565b34801561052157600080fd5b506103bc610fcc565b34801561053657600080fd5b50600a5461054f9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610363565b34801561057357600080fd5b506103bc6105823660046130b0565b611021565b34801561059357600080fd5b5061035960105481565b3480156105a957600080fd5b506105bd6105b83660046130f0565b6111bc565b60405161036391906136eb565b6103bc6105d8366004613355565b611314565b6103bc6105eb366004613194565b61149b565b3480156105fc57600080fd5b5061054f61060b3660046132d9565b6001602052600090815260409020546001600160a01b031681565b34801561063257600080fd5b506103bc610641366004613159565b6115a5565b34801561065257600080fd5b506103f46116b0565b34801561066757600080fd5b506103bc6106763660046131fa565b611742565b34801561068757600080fd5b506103bc61069636600461332a565b6117c8565b3480156106a757600080fd5b506103bc6106b63660046131fa565b611854565b3480156106c757600080fd5b50610359600f5481565b3480156106dd57600080fd5b5060045461054f906001600160a01b031681565b3480156106fd57600080fd5b50600e5461038c9060ff1681565b34801561071757600080fd5b50610359600c5481565b6103bc61072f3660046132d9565b6118da565b34801561074057600080fd5b506103bc61074f36600461305a565b6119f3565b34801561076057600080fd5b5061035960085481565b34801561077657600080fd5b50610359600d5481565b34801561078c57600080fd5b506103bc61079b36600461300c565b611a5d565b3480156107ac57600080fd5b506103bc6107bb366004613159565b611aef565b3480156107cc57600080fd5b506107ef6107db366004612ed7565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b03199091168152602001610363565b34801561081457600080fd5b506103bc6108233660046131fa565b611ba6565b34801561083457600080fd5b5061038c610843366004612e7c565b60156020526000908152604090205460ff1681565b34801561086457600080fd5b506103bc6108733660046130b0565b611c2c565b34801561088457600080fd5b5061035960095481565b34801561089a57600080fd5b5061038c6108a9366004612e9f565b600060208181529281526040808220909352908152205460ff1681565b3480156108d257600080fd5b506103bc6108e13660046132d9565b611d83565b3480156108f257600080fd5b506107ef610901366004612f92565b63f23a6e6160e01b9695505050505050565b34801561091f57600080fd5b506103bc61092e366004612f92565b611ec3565b34801561093f57600080fd5b506103bc61094e366004612e7c565b612176565b34801561095f57600080fd5b50610359600b5481565b6103bc610977366004613159565b612246565b60006301ffc9a760e01b6001600160e01b0319831614806109ad5750636cdb3d1360e11b6001600160e01b03198316145b806109c857506303a24d0760e21b6001600160e01b03198316145b806109e3575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b03163314610a375760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b8051610a4a906007906020840190612cc1565b5080604051610a599190613498565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6060610a96610b72565b821115610aab5763bad086ea6000526004601cfd5b6007610ab683612309565b604051602001610ac79291906134b4565b6040516020818303038152906040529050919050565b6004546001600160a01b03163314610b265760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b600480546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610b7d60065490565b905090565b6004546001600160a01b03163314610bcb5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b601483905560108290556012819055604051838152819083907f1a8a81c83641b8ce6b5aa4f91cae4a094280e2bad8bf7b2bb52ea75b32a274299060200160405180910390a3505050565b6003546002546001600160a01b039091169060009061271090610c39908561379f565b610c43919061377f565b90509250929050565b848314610c8d5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610a2e565b336001600160a01b0389161480610cc557506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610d025760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610a2e565b60008060005b87811015610e2d57888882818110610d3057634e487b7160e01b600052603260045260246000fd5b905060200201359250868682818110610d5957634e487b7160e01b600052603260045260246000fd5b600086815260016020908152604090912054910292909201359350506001600160a01b038c8116911614610dbc5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610a2e565b81600114610dfd5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610a2e565b600083815260016020819052604090912080546001600160a01b0319166001600160a01b038d1617905501610d08565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610e8194939291906136c4565b60405180910390a46001600160a01b0389163b15610f765760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610ed59033908f908e908e908e908e908e908e90600401613586565b602060405180830381600087803b158015610eef57600080fd5b505af1158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f279190613230565b6001600160e01b03191614610f715760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610a2e565b610fc0565b6001600160a01b038916610fc05760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610a2e565b50505050505050505050565b6004546001600160a01b031633146110155760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b61101f3247612358565b565b6005546001146110605760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b60026005556004546001600160a01b031633146110ae5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b6010546011548291906110c2908390613767565b11156110e15760405163f90c1bdb60e01b815260040160405180910390fd5b600954816110ed610b72565b6110f79190613767565b11156111165760405163fc3fc71f60e01b815260040160405180910390fd5b601180548391829160009061112c908490613767565b90915550600090505b8181101561119a5761119285858381811061116057634e487b7160e01b600052603260045260246000fd5b90506020020160208101906111759190612e7c565b61117d6123b3565b604051806020016040528060008152506123ca565b600101611135565b818110156111b05763dfb035c96000526004601cfd5b50506001600555505050565b60608382146111ff5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610a2e565b8367ffffffffffffffff81111561122657634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561124f578160200160208202803683370190505b50905060005b8481101561130b576112d886868381811061128057634e487b7160e01b600052603260045260246000fd5b90506020020160208101906112959190612e7c565b8585848181106112b557634e487b7160e01b600052603260045260246000fd5b905060200201356000908152600160205260409020546001600160a01b03161490565b8282815181106112f857634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101611255565b50949350505050565b6005546001146113535760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b6002600555600e5460ff1661137b5760405163700a6c1f60e01b815260040160405180910390fd5b600b5460ff84163461138d828461379f565b146113ab5760405163f7760f2560e01b815260040160405180910390fd5b600d54849084906113be838383336125b7565b6113db57604051631dc23a5f60e11b815260040160405180910390fd5b87600c548160ff16600f546113f09190613767565b111561140f5760405163a554e6e160e01b815260040160405180910390fd5b6009548160ff1661141e610b72565b6114289190613767565b11156114475760405163fc3fc71f60e01b815260040160405180910390fd5b600f805460ff8b1601905560005b8960ff168110156114745761146c3361117d6123b3565b600101611455565b8981101561148a5763dfb035c96000526004601cfd5b505060016005555050505050505050565b6005546001146114da5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b6002600555600e5460ff166115025760405163700a6c1f60e01b815260040160405180910390fd5b600d5482908290611515838383336125b7565b61153257604051631dc23a5f60e11b815260040160405180910390fd5b855161153d816125ef565b600f80548201905560005b818110156115665761155e600680546001019055565b600101611548565b8181101561157c5763dfb035c96000526004601cfd5b611596338960405180602001604052806000815250612681565b50506001600555505050505050565b6005546001146115e45760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b60026005556004546001600160a01b031633146116325760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b805161163d816128b3565b806011600082825461164f9190613767565b90915550600090505b818110156116765761166e600680546001019055565b600101611658565b8181101561168c5763dfb035c96000526004601cfd5b6116a6328460405180602001604052806000815250612681565b5050600160055550565b6060600780546116bf90613801565b80601f01602080910402602001604051908101604052809291908181526020018280546116eb90613801565b80156117385780601f1061170d57610100808354040283529160200191611738565b820191906000526020600020905b81548152906001019060200180831161171b57829003601f168201915b5050505050905090565b6004546001600160a01b0316331461178b5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b6013805460ff19168215159081179091556040517fec020149988652e71ce4e95276fc01ee00fa98eaedeb859640bcbcc10c933d5490600090a250565b6004546001600160a01b031633146118115760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b600b839055600c829055600d8190556040518190839085907f7e635985aeae52ac6c36618a327c221005c5687948d0922ba4aa0eb3ca244aeb90600090a4505050565b6004546001600160a01b0316331461189d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b600a805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b6005546001146119195760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b6002600555600a5460ff16611941576040516316851fc760e11b815260040160405180910390fd5b80601054600c5460095461195591906137be565b61195f91906137be565b81611968610b72565b6119729190613767565b11156119915760405163fc3fc71f60e01b815260040160405180910390fd5b60085482346119a0828461379f565b146119be5760405163f7760f2560e01b815260040160405180910390fd5b60005b848110156119dd576119d53361117d6123b3565b6001016119c1565b848110156111b05763dfb035c96000526004601cfd5b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6004546001600160a01b03163314611aa65760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b80516000905b80821015611ac957611abe60066128e3565b816001019150611aac565b80821015611adf5763dfb035c96000526004601cfd5b611ae98484612900565b50505050565b6004546001600160a01b03163314611b385760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b80516000905b80821015611b8b57611b5060066128e3565b611b80838381518110611b7357634e487b7160e01b600052603260045260246000fd5b6020026020010151612af3565b816001019150611b3e565b80821015611ba15763dfb035c96000526004601cfd5b505050565b6004546001600160a01b03163314611bef5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b600e805460ff19168215159081179091556040517f73f6b206c369921a0a5b0dae31848c0b0602675d2577a6b3d4e953cdee3139e190600090a250565b60135460ff16611c4f5760405163f44170cb60e01b815260040160405180910390fd5b60125482908290611c62838383336125b7565b611c7f57604051631dc23a5f60e11b815260040160405180910390fd5b60145460105481601154611c939190613767565b1115611cb25760405163f90c1bdb60e01b815260040160405180910390fd5b60095481611cbe610b72565b611cc89190613767565b1115611ce75760405163fc3fc71f60e01b815260040160405180910390fd5b3360009081526015602052604090205460ff16151560011415611d1d57604051630c8d9eab60e31b815260040160405180910390fd5b336000908152601560205260408120805460ff191660011790556014546011805490910190555b601454811015611d6257611d5a3361117d6123b3565b600101611d44565b601454811015611d7a5763dfb035c96000526004601cfd5b50505050505050565b600554600114611dc25760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b60026005556004546001600160a01b03163314611e105760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b8060105481601154611e229190613767565b1115611e415760405163f90c1bdb60e01b815260040160405180910390fd5b60095481611e4d610b72565b611e579190613767565b1115611e765760405163fc3fc71f60e01b815260040160405180910390fd5b8160116000828254611e889190613767565b90915550600090505b82811015611ead57611ea53261117d6123b3565b600101611e91565b828110156116a65763dfb035c96000526004601cfd5b336001600160a01b0387161480611efb57506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b611f385760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610a2e565b6000848152600160205260409020546001600160a01b03878116911614611f8e5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610a2e565b82600114611fcf5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610a2e565b60008481526001602090815260409182902080546001600160a01b0319166001600160a01b038981169182179092558351888152928301879052929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b156121245760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906120839033908b908a908a908a908a9060040161368b565b602060405180830381600087803b15801561209d57600080fd5b505af11580156120b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120d59190613230565b6001600160e01b0319161461211f5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610a2e565b61216e565b6001600160a01b03851661216e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610a2e565b505050505050565b6004546001600160a01b031633146121bf5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b6040516370a0823160e01b815230600482015261224390829032906001600160a01b038316906370a082319060240160206040518083038186803b15801561220657600080fd5b505afa15801561221a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061223e91906132f1565b612bbf565b50565b6005546001146122855760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b6002600555600a5460ff166122ad576040516316851fc760e11b815260040160405180910390fd5b80516122b881612c45565b60005b818110156122d9576122d1600680546001019055565b6001016122bb565b818110156122ef5763dfb035c96000526004601cfd5b6116a6338460405180602001604052806000815250612681565b604080516080810191829052607f0190826030600a8206018353600a90045b801561234657600183039250600a81066030018353600a9004612328565b50819003601f19909101908152919050565b600080600080600085875af1905080611ba15760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610a2e565b60006123c3600680546001019055565b5060065490565b6000828152600160205260409020546001600160a01b0316156124205760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610a2e565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b03891690811790915581518781529283019390935291929133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0383163b1561256d5760405163f23a6e6160e01b808252906001600160a01b0385169063f23a6e61906124d190339060009088906001908990600401613648565b602060405180830381600087803b1580156124eb57600080fd5b505af11580156124ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125239190613230565b6001600160e01b03191614611ba15760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610a2e565b6001600160a01b038316611ba15760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610a2e565b60008360051b8501855b8181146125e557803580851160051b948552602094851852604060002093016125c1565b5050501492915050565b3481600b546125fe919061379f565b1461261c5760405163f7760f2560e01b815260040160405180910390fd5b600c5481600f5461262d9190613767565b111561264c5760405163a554e6e160e01b815260040160405180910390fd5b60095481612658610b72565b6126629190613767565b11156122435760405163fc3fc71f60e01b815260040160405180910390fd5b815160008167ffffffffffffffff8111156126ac57634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156126d5578160200160208202803683370190505b5090506000805b838110156127c95785818151811061270457634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600081815260019092526040909120549092506001600160a01b03161561276a5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610a2e565b600082815260016020819052604090912080546001600160a01b0319166001600160a01b038a1617905583518490839081106127b657634e487b7160e01b600052603260045260246000fd5b60209081029190910101526001016126dc565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb888660405161281a9291906136fe565b60405180910390a46001600160a01b0386163b156128695760405163bc197c8160e01b808252906001600160a01b0388169063bc197c81906120839033906000908b9089908c906004016135ea565b6001600160a01b03861661216e5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610a2e565b601054816011546128c49190613767565b111561264c5760405163f90c1bdb60e01b815260040160405180910390fd5b8054806128f85763ce3a3d376000526004601cfd5b600019019055565b6001600160a01b0382166129565760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d00000000000000000000000000000000000000006044820152606401610a2e565b805160008167ffffffffffffffff81111561298157634e487b7160e01b600052604160045260246000fd5b6040519080825280602002602001820160405280156129aa578160200160208202803683370190505b5090506000805b83811015612a93578481815181106129d957634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600081815260019092526040909120549092506001600160a01b03878116911614612a3f5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610a2e565b600082815260016020819052604090912080546001600160a01b03191690558351849083908110612a8057634e487b7160e01b600052603260045260246000fd5b60209081029190910101526001016129b1565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8786604051612ae49291906136fe565b60405180910390a45050505050565b6000818152600160205260409020546001600160a01b031680612b585760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f4d494e544544000000000000000000000000000000000000000000006044820152606401610a2e565b600082815260016020818152604080842080546001600160a01b03191690558051868152918201929092526001600160a01b0384169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611ae95760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610a2e565b601054600c54600954612c5891906137be565b612c6291906137be565b81612c6b610b72565b612c759190613767565b1115612c945760405163fc3fc71f60e01b815260040160405180910390fd5b3481600854612ca3919061379f565b146122435760405163f7760f2560e01b815260040160405180910390fd5b828054612ccd90613801565b90600052602060002090601f016020900481019282612cef5760008555612d35565b82601f10612d0857805160ff1916838001178555612d35565b82800160010185558215612d35579182015b82811115612d35578251825591602001919060010190612d1a565b50612d41929150612d45565b5090565b5b80821115612d415760008155600101612d46565b60008083601f840112612d6b578182fd5b50813567ffffffffffffffff811115612d82578182fd5b6020830191508360208260051b8501011115612d9d57600080fd5b9250929050565b600082601f830112612db4578081fd5b8135602067ffffffffffffffff821115612dd057612dd0613852565b8160051b612ddf828201613736565b838152828101908684018388018501891015612df9578687fd5b8693505b85841015612e1b578035835260019390930192918401918401612dfd565b50979650505050505050565b80358015158114612e3757600080fd5b919050565b60008083601f840112612e4d578182fd5b50813567ffffffffffffffff811115612e64578182fd5b602083019150836020828501011115612d9d57600080fd5b600060208284031215612e8d578081fd5b8135612e9881613868565b9392505050565b60008060408385031215612eb1578081fd5b8235612ebc81613868565b91506020830135612ecc81613868565b809150509250929050565b60008060008060008060008060a0898b031215612ef2578384fd5b8835612efd81613868565b97506020890135612f0d81613868565b9650604089013567ffffffffffffffff80821115612f29578586fd5b612f358c838d01612d5a565b909850965060608b0135915080821115612f4d578586fd5b612f598c838d01612d5a565b909650945060808b0135915080821115612f71578384fd5b50612f7e8b828c01612e3c565b999c989b5096995094979396929594505050565b60008060008060008060a08789031215612faa578182fd5b8635612fb581613868565b95506020870135612fc581613868565b94506040870135935060608701359250608087013567ffffffffffffffff811115612fee578283fd5b612ffa89828a01612e3c565b979a9699509497509295939492505050565b6000806040838503121561301e578182fd5b823561302981613868565b9150602083013567ffffffffffffffff811115613044578182fd5b61305085828601612da4565b9150509250929050565b6000806040838503121561306c578182fd5b823561307781613868565b9150610c4360208401612e27565b60008060408385031215613097578182fd5b82356130a281613868565b946020939093013593505050565b600080602083850312156130c2578182fd5b823567ffffffffffffffff8111156130d8578283fd5b6130e485828601612d5a565b90969095509350505050565b60008060008060408587031215613105578182fd5b843567ffffffffffffffff8082111561311c578384fd5b61312888838901612d5a565b90965094506020870135915080821115613140578384fd5b5061314d87828801612d5a565b95989497509550505050565b60006020828403121561316a578081fd5b813567ffffffffffffffff811115613180578182fd5b61318c84828501612da4565b949350505050565b6000806000604084860312156131a8578081fd5b833567ffffffffffffffff808211156131bf578283fd5b6131cb87838801612da4565b945060208601359150808211156131e0578283fd5b506131ed86828701612d5a565b9497909650939450505050565b60006020828403121561320b578081fd5b612e9882612e27565b600060208284031215613225578081fd5b8135612e988161387d565b600060208284031215613241578081fd5b8151612e988161387d565b6000602080838503121561325e578182fd5b823567ffffffffffffffff80821115613275578384fd5b818501915085601f830112613288578384fd5b81358181111561329a5761329a613852565b6132ac601f8201601f19168501613736565b915080825286848285010111156132c1578485fd5b80848401858401378101909201929092529392505050565b6000602082840312156132ea578081fd5b5035919050565b600060208284031215613302578081fd5b5051919050565b6000806040838503121561331b578182fd5b50508035926020909101359150565b60008060006060848603121561333e578081fd5b505081359360208301359350604090920135919050565b600080600060408486031215613369578081fd5b833560ff81168114613379578182fd5b9250602084013567ffffffffffffffff811115613394578182fd5b6131ed86828701612d5a565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156133d1578081fd5b8260051b80836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b8381101561341c57815187529582019590820190600101613400565b509495945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600081518084526134688160208601602086016137d5565b601f01601f19169290920160200192915050565b6000815161348e8185602086016137d5565b9290920192915050565b600082516134aa8184602087016137d5565b9190910192915050565b600080845482600182811c9150808316806134d057607f831692505b60208084108214156134f057634e487b7160e01b87526022600452602487fd5b818015613504576001811461351557613541565b60ff19861689528489019650613541565b60008b815260209020885b868110156135395781548b820152908501908301613520565b505084890196505b50505050505061357d613554828661347c565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b95945050505050565b60006001600160a01b03808b168352808a1660208401525060a060408301526135b360a08301888a6133a0565b82810360608401526135c68187896133a0565b905082810360808401526135db818587613427565b9b9a5050505050505050505050565b60006001600160a01b03808816835280871660208401525060a0604083015261361660a08301866133ed565b828103606084015261362881866133ed565b9050828103608084015261363c8185613450565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a0608083015261368060a0830184613450565b979650505050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a0608083015261363c60a083018486613427565b6040815260006136d86040830186886133a0565b82810360208401526136808185876133a0565b602081526000612e9860208301846133ed565b60408152600061371160408301856133ed565b828103602084015261357d81856133ed565b602081526000612e986020830184613450565b604051601f8201601f1916810167ffffffffffffffff8111828210171561375f5761375f613852565b604052919050565b6000821982111561377a5761377a61383c565b500190565b60008261379a57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156137b9576137b961383c565b500290565b6000828210156137d0576137d061383c565b500390565b60005b838110156137f05781810151838201526020016137d8565b83811115611ae95750506000910152565b600181811c9082168061381557607f821691505b6020821081141561383657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461224357600080fd5b6001600160e01b03198116811461224357600080fdfea164736f6c6343000804000a";

type ERC1155WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Whitelist__factory extends ContractFactory {
  constructor(...args: ERC1155WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Whitelist> {
    return super.deploy(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    ) as Promise<ERC1155Whitelist>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Whitelist {
    return super.attach(address) as ERC1155Whitelist;
  }
  override connect(signer: Signer): ERC1155Whitelist__factory {
    return super.connect(signer) as ERC1155Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155WhitelistInterface {
    return new utils.Interface(_abi) as ERC1155WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Whitelist {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Whitelist;
  }
}
