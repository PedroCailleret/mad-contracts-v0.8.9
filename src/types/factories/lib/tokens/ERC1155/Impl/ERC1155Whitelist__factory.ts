/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Whitelist,
  ERC1155WhitelistInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Whitelist";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "NotMintedYet",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "newBaseURI",
        type: "string",
      },
    ],
    name: "BaseURISet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "freeClaimState",
        type: "bool",
      },
    ],
    name: "FreeClaimStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newFreeAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newMaxFree",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "FreeConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newWhitelistPrice",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "newMaxWhitelistSupply",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "WhitelistConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newWhitelistState",
        type: "bool",
      },
    ],
    name: "WhitelistMintStateSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "burnBatch",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "claimFree",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimListMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "claimed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "freeClaimState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_freeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_maxFree",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_claimListMerkleRoot",
        type: "bytes32",
      },
    ],
    name: "freeConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "freeSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "addresses",
        type: "address[]",
      },
    ],
    name: "giftTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxFree",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxWhitelistSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "mintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "mintBatchToCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintToCreator",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_freeClaimState",
        type: "bool",
      },
    ],
    name: "setFreeClaimState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__uri",
        type: "string",
      },
    ],
    name: "setURI",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_whitelistMintState",
        type: "bool",
      },
    ],
    name: "setWhitelistMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_supply",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "whitelistConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMerkleRoot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "bytes32[]",
        name: "merkleProof",
        type: "bytes32[]",
      },
    ],
    name: "whitelistMintBatch",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "whitelistPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016005553480156200001657600080fd5b50604051620040a5380380620040a583398101604081905262000039916200023f565b600480546001600160a01b0319166001600160a01b0383169081179091556040518291906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35085516200009b90600790602089019062000164565b5060088590556009849055600a8054610100600160a81b0319166101006001600160a01b03868116820292909217928390556001600160601b038516600281905560038054929094049092166001600160a01b0319909116179091556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a2505050505050620003b5565b828054620001729062000362565b90600052602060002090601f016020900481019282620001965760008555620001e1565b82601f10620001b157805160ff1916838001178555620001e1565b82800160010185558215620001e1579182015b82811115620001e1578251825591602001919060010190620001c4565b50620001ef929150620001f3565b5090565b5b80821115620001ef5760008155600101620001f4565b80516001600160a01b03811681146200022257600080fd5b919050565b80516001600160601b03811681146200022257600080fd5b60008060008060008060c0878903121562000258578182fd5b86516001600160401b03808211156200026f578384fd5b818901915089601f83011262000283578384fd5b8151818111156200029857620002986200039f565b604051601f8201601f19908116603f01168101908382118183101715620002c357620002c36200039f565b81604052828152602093508c84848701011115620002df578687fd5b8691505b82821015620003025784820184015181830185015290830190620002e3565b828211156200031357868484830101525b809a5050505080890151965050506040870151935062000336606088016200020a565b9250620003466080880162000227565b91506200035660a088016200020a565b90509295509295509295565b600181811c908216806200037757607f821691505b602082108114156200039957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b613ce080620003c56000396000f3fe60806040526004361061031d5760003560e01c80637e62f3b3116101a5578063b80f55c9116100ec578063e985e9c511610095578063f242432a1161006f578063f242432a14610913578063f4f3b20014610933578063fc1a1c3614610953578063ffb2b55a1461096957600080fd5b8063e985e9c51461088e578063ef4eb030146108c6578063f23a6e61146108e657600080fd5b8063c884ef83116100c6578063c884ef8314610828578063c890476714610858578063d5abeb011461087857600080fd5b8063b80f55c9146107a0578063bc197c81146107c0578063c6a768f41461080857600080fd5b8063953f049d1161014e578063a945bf8011610128578063a945bf8014610754578063aa98e0c61461076a578063b2dc5dc31461078057600080fd5b8063953f049d1461070b578063a0712d6814610721578063a22cb4651461073457600080fd5b80638990694f1161017f5780638990694f146106bb5780638da5cb5b146106d1578063922400ff146106f157600080fd5b80637e62f3b31461065b57806386997e7d1461067b578063879fbedf1461069b57600080fd5b80632eb2c2d6116102695780634e1273f4116102125780636352211e116101ec5780636352211e146105f0578063640da9ed146106265780637754305c1461064657600080fd5b80634e1273f41461059d57806358381669146105ca57806358800e24146105dd57600080fd5b80633cd8045e116102435780633cd8045e1461052a578063440754d814610567578063485a68a31461058757600080fd5b80632eb2c2d6146104df578063326f9ad3146104ff5780633ccfd60b1461051557600080fd5b806313af4035116102cb57806324a6ab0c116102a557806324a6ab0c1461046a57806327c19186146104805780632a55205a146104a057600080fd5b806313af40351461041b57806318160ddd1461043b57806322ab47a11461045057600080fd5b80630451a9f1116102fc5780630451a9f1146103be5780630e89341c146103d4578063121c87811461040157600080fd5b8062fdd58e1461032257806301ffc9a71461036c57806302fe53051461039c575b600080fd5b34801561032e57600080fd5b5061035961033d3660046134c5565b6000908152600160205260409020546001600160a01b03161490565b6040519081526020015b60405180910390f35b34801561037857600080fd5b5061038c610387366004613654565b61097c565b6040519015158152602001610363565b3480156103a857600080fd5b506103bc6103b736600461368c565b6109e9565b005b3480156103ca57600080fd5b5061035960145481565b3480156103e057600080fd5b506103f46103ef366004613719565b610a8c565b6040516103639190613b63565b34801561040d57600080fd5b5060135461038c9060ff1681565b34801561042757600080fd5b506103bc6104363660046132bc565b610add565b34801561044757600080fd5b50610359610b72565b34801561045c57600080fd5b50600a5461038c9060ff1681565b34801561047657600080fd5b5061035960115481565b34801561048c57600080fd5b506103bc61049b36600461376a565b610b82565b3480156104ac57600080fd5b506104c06104bb366004613749565b610c16565b604080516001600160a01b039093168352602083019190915201610363565b3480156104eb57600080fd5b506103bc6104fa366004613317565b610c4c565b34801561050b57600080fd5b5061035960125481565b34801561052157600080fd5b506103bc610fcc565b34801561053657600080fd5b50600a5461054f9061010090046001600160a01b031681565b6040516001600160a01b039091168152602001610363565b34801561057357600080fd5b506103bc6105823660046134f0565b611021565b34801561059357600080fd5b5061035960105481565b3480156105a957600080fd5b506105bd6105b8366004613530565b611208565b6040516103639190613b2b565b6103bc6105d8366004613795565b611360565b6103bc6105eb3660046135d4565b6115ac565b3480156105fc57600080fd5b5061054f61060b366004613719565b6001602052600090815260409020546001600160a01b031681565b34801561063257600080fd5b506103bc610641366004613599565b611710565b34801561065257600080fd5b506103f4611827565b34801561066757600080fd5b506103bc61067636600461363a565b6118b9565b34801561068757600080fd5b506103bc61069636600461376a565b61193f565b3480156106a757600080fd5b506103bc6106b636600461363a565b6119cb565b3480156106c757600080fd5b50610359600f5481565b3480156106dd57600080fd5b5060045461054f906001600160a01b031681565b3480156106fd57600080fd5b50600e5461038c9060ff1681565b34801561071757600080fd5b50610359600c5481565b6103bc61072f366004613719565b611a51565b34801561074057600080fd5b506103bc61074f36600461349a565b611bd4565b34801561076057600080fd5b5061035960085481565b34801561077657600080fd5b50610359600d5481565b34801561078c57600080fd5b506103bc61079b36600461344c565b611c3e565b3480156107ac57600080fd5b506103bc6107bb366004613599565b611cdc565b3480156107cc57600080fd5b506107ef6107db366004613317565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b03199091168152602001610363565b34801561081457600080fd5b506103bc61082336600461363a565b611d9f565b34801561083457600080fd5b5061038c6108433660046132bc565b60156020526000908152604090205460ff1681565b34801561086457600080fd5b506103bc6108733660046134f0565b611e25565b34801561088457600080fd5b5061035960095481565b34801561089a57600080fd5b5061038c6108a93660046132df565b600060208181529281526040808220909352908152205460ff1681565b3480156108d257600080fd5b506103bc6108e1366004613719565b612045565b3480156108f257600080fd5b506107ef6109013660046133d2565b63f23a6e6160e01b9695505050505050565b34801561091f57600080fd5b506103bc61092e3660046133d2565b6121d1565b34801561093f57600080fd5b506103bc61094e3660046132bc565b612484565b34801561095f57600080fd5b50610359600b5481565b6103bc610977366004613599565b612554565b60006301ffc9a760e01b6001600160e01b0319831614806109ad5750636cdb3d1360e11b6001600160e01b03198316145b806109c857506303a24d0760e21b6001600160e01b03198316145b806109e3575063152a902d60e11b6001600160e01b03198316145b92915050565b6004546001600160a01b03163314610a375760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b8051610a4a906007906020840190613101565b5080604051610a5991906138d8565b604051908190038120907ff9c7803e94e0d3c02900d8a90893a6d5e90dd04d32a4cfe825520f82bf9f32f690600090a250565b6060610a96610b72565b821115610aab5763bad086ea6000526004601cfd5b6007610ab683612645565b604051602001610ac79291906138f4565b6040516020818303038152906040529050919050565b6004546001600160a01b03163314610b265760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b600480546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b6000610b7d60065490565b905090565b6004546001600160a01b03163314610bcb5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b601483905560108290556012819055604051838152819083907f1a8a81c83641b8ce6b5aa4f91cae4a094280e2bad8bf7b2bb52ea75b32a274299060200160405180910390a3505050565b6003546002546001600160a01b039091169060009061271090610c399085613bdf565b610c439190613bbf565b90509250929050565b848314610c8d5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610a2e565b336001600160a01b0389161480610cc557506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b610d025760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610a2e565b60008060005b87811015610e2d57888882818110610d3057634e487b7160e01b600052603260045260246000fd5b905060200201359250868682818110610d5957634e487b7160e01b600052603260045260246000fd5b600086815260016020908152604090912054910292909201359350506001600160a01b038c8116911614610dbc5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610a2e565b81600114610dfd5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610a2e565b600083815260016020819052604090912080546001600160a01b0319166001600160a01b038d1617905501610d08565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610e819493929190613b04565b60405180910390a46001600160a01b0389163b15610f765760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610ed59033908f908e908e908e908e908e908e906004016139c6565b602060405180830381600087803b158015610eef57600080fd5b505af1158015610f03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f279190613670565b6001600160e01b03191614610f715760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610a2e565b610fc0565b6001600160a01b038916610fc05760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610a2e565b50505050505050505050565b6004546001600160a01b031633146110155760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b61101f3247612694565b565b6005546001146110605760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b60026005556004546001600160a01b031633146110ae5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b6010546011548291906110c2908390613ba7565b11156111015760405162461bcd60e51b815260206004820152600e60248201526d13585e119c995954995858da195960921b6044820152606401610a2e565b6009548161110d610b72565b6111179190613ba7565b11156111565760405162461bcd60e51b815260206004820152600e60248201526d13585e135a5b9d14995858da195960921b6044820152606401610a2e565b601180548391829160009061116c908490613ba7565b90915550600090505b818110156111da576111d28585838181106111a057634e487b7160e01b600052603260045260246000fd5b90506020020160208101906111b591906132bc565b6111bd6126ef565b60405180602001604052806000815250612706565b600101611175565b818110156111fc576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b50506001600555505050565b606083821461124b5760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b6044820152606401610a2e565b8367ffffffffffffffff81111561127257634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561129b578160200160208202803683370190505b50905060005b84811015611357576113248686838181106112cc57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906112e191906132bc565b85858481811061130157634e487b7160e01b600052603260045260246000fd5b905060200201356000908152600160205260409020546001600160a01b03161490565b82828151811061134457634e487b7160e01b600052603260045260246000fd5b60209081029190910101526001016112a1565b50949350505050565b60055460011461139f5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b6002600555600e5460ff166113f65760405162461bcd60e51b815260206004820152601360248201527f57686974656c6973744d696e74436c6f736564000000000000000000000000006044820152606401610a2e565b600b5460ff8416346114088284613bdf565b146114425760405162461bcd60e51b815260206004820152600a60248201526957726f6e67507269636560b01b6044820152606401610a2e565b600d5484908490611455838383336128f3565b6114915760405162461bcd60e51b815260206004820152600d60248201526c1059191c995cdcd1195b9a5959609a1b6044820152606401610a2e565b87600c548160ff16600f546114a69190613ba7565b11156114f45760405162461bcd60e51b815260206004820152601360248201527f4d617857686974656c69737452656163686564000000000000000000000000006044820152606401610a2e565b6009548160ff16611503610b72565b61150d9190613ba7565b111561154c5760405162461bcd60e51b815260206004820152600e60248201526d13585e135a5b9d14995858da195960921b6044820152606401610a2e565b600f805460ff8b1601905560005b8960ff1681101561157957611571336111bd6126ef565b60010161155a565b8981101561159b576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b505060016005555050505050505050565b6005546001146115eb5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b6002600555600e5460ff166116425760405162461bcd60e51b815260206004820152601360248201527f57686974656c6973744d696e74436c6f736564000000000000000000000000006044820152606401610a2e565b600d5482908290611655838383336128f3565b6116915760405162461bcd60e51b815260206004820152600d60248201526c1059191c995cdcd1195b9a5959609a1b6044820152606401610a2e565b855161169c8161292b565b600f80548201905560005b818110156116c5576116bd600680546001019055565b6001016116a7565b818110156116e7576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b611701338960405180602001604052806000815250612a28565b50506001600555505050505050565b60055460011461174f5760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b60026005556004546001600160a01b0316331461179d5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b80516117a881612c5a565b80601160008282546117ba9190613ba7565b90915550600090505b818110156117e1576117d9600680546001019055565b6001016117c3565b81811015611803576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b61181d328460405180602001604052806000815250612a28565b5050600160055550565b60606007805461183690613c41565b80601f016020809104026020016040519081016040528092919081815260200182805461186290613c41565b80156118af5780601f10611884576101008083540402835291602001916118af565b820191906000526020600020905b81548152906001019060200180831161189257829003601f168201915b5050505050905090565b6004546001600160a01b031633146119025760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b6013805460ff19168215159081179091556040517fec020149988652e71ce4e95276fc01ee00fa98eaedeb859640bcbcc10c933d5490600090a250565b6004546001600160a01b031633146119885760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b600b839055600c829055600d8190556040518190839085907f7e635985aeae52ac6c36618a327c221005c5687948d0922ba4aa0eb3ca244aeb90600090a4505050565b6004546001600160a01b03163314611a145760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b600a805460ff19168215159081179091556040517f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b600554600114611a905760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b6002600555600a5460ff16611ada5760405162461bcd60e51b815260206004820152601060248201526f141d589b1a58d35a5b9d10db1bdcd95960821b6044820152606401610a2e565b80601054600c54600954611aee9190613bfe565b611af89190613bfe565b81611b01610b72565b611b0b9190613ba7565b1115611b4a5760405162461bcd60e51b815260206004820152600e60248201526d13585e135a5b9d14995858da195960921b6044820152606401610a2e565b6008548234611b598284613bdf565b14611b935760405162461bcd60e51b815260206004820152600a60248201526957726f6e67507269636560b01b6044820152606401610a2e565b60005b84811015611bb257611baa336111bd6126ef565b600101611b96565b848110156111fc576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6004546001600160a01b03163314611c875760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b80516000905b80821015611caa57611c9f6006612caa565b816001019150611c8d565b80821015611ccc576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b611cd68484612d04565b50505050565b6004546001600160a01b03163314611d255760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b80516000905b80821015611d7857611d3d6006612caa565b611d6d838381518110611d6057634e487b7160e01b600052603260045260246000fd5b6020026020010151612ef7565b816001019150611d2b565b80821015611d9a576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b505050565b6004546001600160a01b03163314611de85760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b600e805460ff19168215159081179091556040517f73f6b206c369921a0a5b0dae31848c0b0602675d2577a6b3d4e953cdee3139e190600090a250565b60135460ff16611e775760405162461bcd60e51b815260206004820152600f60248201527f46726565436c61696d436c6f73656400000000000000000000000000000000006044820152606401610a2e565b60125482908290611e8a838383336128f3565b611ec65760405162461bcd60e51b815260206004820152600d60248201526c1059191c995cdcd1195b9a5959609a1b6044820152606401610a2e565b60145460105481601154611eda9190613ba7565b1115611f195760405162461bcd60e51b815260206004820152600e60248201526d13585e119c995954995858da195960921b6044820152606401610a2e565b60095481611f25610b72565b611f2f9190613ba7565b1115611f6e5760405162461bcd60e51b815260206004820152600e60248201526d13585e135a5b9d14995858da195960921b6044820152606401610a2e565b3360009081526015602052604090205460ff16151560011415611fd35760405162461bcd60e51b815260206004820152600e60248201527f416c7265616479436c61696d65640000000000000000000000000000000000006044820152606401610a2e565b336000908152601560205260408120805460ff191660011790556014546011805490910190555b60145481101561201857612010336111bd6126ef565b600101611ffa565b60145481101561203c576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b50505050505050565b6005546001146120845760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b60026005556004546001600160a01b031633146120d25760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b80601054816011546120e49190613ba7565b11156121235760405162461bcd60e51b815260206004820152600e60248201526d13585e119c995954995858da195960921b6044820152606401610a2e565b6009548161212f610b72565b6121399190613ba7565b11156121785760405162461bcd60e51b815260206004820152600e60248201526d13585e135a5b9d14995858da195960921b6044820152606401610a2e565b816011600082825461218a9190613ba7565b90915550600090505b828110156121af576121a7326111bd6126ef565b600101612193565b8281101561181d576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b336001600160a01b038716148061220957506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b6122465760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610a2e565b6000848152600160205260409020546001600160a01b0387811691161461229c5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610a2e565b826001146122dd5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b6044820152606401610a2e565b60008481526001602090815260409182902080546001600160a01b0319166001600160a01b038981169182179092558351888152928301879052929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b156124325760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906123919033908b908a908a908a908a90600401613acb565b602060405180830381600087803b1580156123ab57600080fd5b505af11580156123bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123e39190613670565b6001600160e01b0319161461242d5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610a2e565b61247c565b6001600160a01b03851661247c5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610a2e565b505050505050565b6004546001600160a01b031633146124cd5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610a2e565b6040516370a0823160e01b815230600482015261255190829032906001600160a01b038316906370a082319060240160206040518083038186803b15801561251457600080fd5b505afa158015612528573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061254c9190613731565b612fc3565b50565b6005546001146125935760405162461bcd60e51b815260206004820152600a6024820152695245454e5452414e435960b01b6044820152606401610a2e565b6002600555600a5460ff166125dd5760405162461bcd60e51b815260206004820152601060248201526f141d589b1a58d35a5b9d10db1bdcd95960821b6044820152606401610a2e565b80516125e881613049565b60005b8181101561260957612601600680546001019055565b6001016125eb565b8181101561262b576c4c4f4f505f4f564552464c4f5760981b60005260206000fd5b61181d338460405180602001604052806000815250612a28565b604080516080810191829052607f0190826030600a8206018353600a90045b801561268257600183039250600a81066030018353600a9004612664565b50819003601f19909101908152919050565b600080600080600085875af1905080611d9a5760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c4544000000000000000000000000006044820152606401610a2e565b60006126ff600680546001019055565b5060065490565b6000828152600160205260409020546001600160a01b03161561275c5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610a2e565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b03891690811790915581518781529283019390935291929133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0383163b156128a95760405163f23a6e6160e01b808252906001600160a01b0385169063f23a6e619061280d90339060009088906001908990600401613a88565b602060405180830381600087803b15801561282757600080fd5b505af115801561283b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061285f9190613670565b6001600160e01b03191614611d9a5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610a2e565b6001600160a01b038316611d9a5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610a2e565b60008360051b8501855b81811461292157803580851160051b948552602094851852604060002093016128fd565b5050501492915050565b3481600b5461293a9190613bdf565b146129745760405162461bcd60e51b815260206004820152600a60248201526957726f6e67507269636560b01b6044820152606401610a2e565b600c5481600f546129859190613ba7565b11156129d35760405162461bcd60e51b815260206004820152601360248201527f4d617857686974656c69737452656163686564000000000000000000000000006044820152606401610a2e565b600954816129df610b72565b6129e99190613ba7565b11156125515760405162461bcd60e51b815260206004820152600e60248201526d13585e135a5b9d14995858da195960921b6044820152606401610a2e565b815160008167ffffffffffffffff811115612a5357634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612a7c578160200160208202803683370190505b5090506000805b83811015612b7057858181518110612aab57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600081815260019092526040909120549092506001600160a01b031615612b115760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610a2e565b600082815260016020819052604090912080546001600160a01b0319166001600160a01b038a161790558351849083908110612b5d57634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101612a83565b50856001600160a01b031660006001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8886604051612bc1929190613b3e565b60405180910390a46001600160a01b0386163b15612c105760405163bc197c8160e01b808252906001600160a01b0388169063bc197c81906123919033906000908b9089908c90600401613a2a565b6001600160a01b03861661247c5760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b6044820152606401610a2e565b60105481601154612c6b9190613ba7565b11156129d35760405162461bcd60e51b815260206004820152600e60248201526d13585e119c995954995858da195960921b6044820152606401610a2e565b805480612cf95760405162461bcd60e51b815260206004820152601260248201527f44454352454d454e545f4f564552464c4f5700000000000000000000000000006044820152606401610a2e565b508054600019019055565b6001600160a01b038216612d5a5760405162461bcd60e51b815260206004820152600c60248201527f494e56414c49445f46524f4d00000000000000000000000000000000000000006044820152606401610a2e565b805160008167ffffffffffffffff811115612d8557634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015612dae578160200160208202803683370190505b5090506000805b83811015612e9757848181518110612ddd57634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600081815260019092526040909120549092506001600160a01b03878116911614612e435760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610a2e565b600082815260016020819052604090912080546001600160a01b03191690558351849083908110612e8457634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101612db5565b5060006001600160a01b0316856001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8786604051612ee8929190613b3e565b60405180910390a45050505050565b6000818152600160205260409020546001600160a01b031680612f5c5760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f4d494e544544000000000000000000000000000000000000000000006044820152606401610a2e565b600082815260016020818152604080842080546001600160a01b03191690558051868152918201929092526001600160a01b0384169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080611cd65760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c454400000000000000000000000000000000006044820152606401610a2e565b601054600c5460095461305c9190613bfe565b6130669190613bfe565b8161306f610b72565b6130799190613ba7565b11156130b85760405162461bcd60e51b815260206004820152600e60248201526d13585e135a5b9d14995858da195960921b6044820152606401610a2e565b34816008546130c79190613bdf565b146125515760405162461bcd60e51b815260206004820152600a60248201526957726f6e67507269636560b01b6044820152606401610a2e565b82805461310d90613c41565b90600052602060002090601f01602090048101928261312f5760008555613175565b82601f1061314857805160ff1916838001178555613175565b82800160010185558215613175579182015b8281111561317557825182559160200191906001019061315a565b50613181929150613185565b5090565b5b808211156131815760008155600101613186565b60008083601f8401126131ab578182fd5b50813567ffffffffffffffff8111156131c2578182fd5b6020830191508360208260051b85010111156131dd57600080fd5b9250929050565b600082601f8301126131f4578081fd5b8135602067ffffffffffffffff82111561321057613210613c92565b8160051b61321f828201613b76565b838152828101908684018388018501891015613239578687fd5b8693505b8584101561325b57803583526001939093019291840191840161323d565b50979650505050505050565b8035801515811461327757600080fd5b919050565b60008083601f84011261328d578182fd5b50813567ffffffffffffffff8111156132a4578182fd5b6020830191508360208285010111156131dd57600080fd5b6000602082840312156132cd578081fd5b81356132d881613ca8565b9392505050565b600080604083850312156132f1578081fd5b82356132fc81613ca8565b9150602083013561330c81613ca8565b809150509250929050565b60008060008060008060008060a0898b031215613332578384fd5b883561333d81613ca8565b9750602089013561334d81613ca8565b9650604089013567ffffffffffffffff80821115613369578586fd5b6133758c838d0161319a565b909850965060608b013591508082111561338d578586fd5b6133998c838d0161319a565b909650945060808b01359150808211156133b1578384fd5b506133be8b828c0161327c565b999c989b5096995094979396929594505050565b60008060008060008060a087890312156133ea578182fd5b86356133f581613ca8565b9550602087013561340581613ca8565b94506040870135935060608701359250608087013567ffffffffffffffff81111561342e578283fd5b61343a89828a0161327c565b979a9699509497509295939492505050565b6000806040838503121561345e578182fd5b823561346981613ca8565b9150602083013567ffffffffffffffff811115613484578182fd5b613490858286016131e4565b9150509250929050565b600080604083850312156134ac578182fd5b82356134b781613ca8565b9150610c4360208401613267565b600080604083850312156134d7578182fd5b82356134e281613ca8565b946020939093013593505050565b60008060208385031215613502578182fd5b823567ffffffffffffffff811115613518578283fd5b6135248582860161319a565b90969095509350505050565b60008060008060408587031215613545578182fd5b843567ffffffffffffffff8082111561355c578384fd5b6135688883890161319a565b90965094506020870135915080821115613580578384fd5b5061358d8782880161319a565b95989497509550505050565b6000602082840312156135aa578081fd5b813567ffffffffffffffff8111156135c0578182fd5b6135cc848285016131e4565b949350505050565b6000806000604084860312156135e8578081fd5b833567ffffffffffffffff808211156135ff578283fd5b61360b878388016131e4565b94506020860135915080821115613620578283fd5b5061362d8682870161319a565b9497909650939450505050565b60006020828403121561364b578081fd5b6132d882613267565b600060208284031215613665578081fd5b81356132d881613cbd565b600060208284031215613681578081fd5b81516132d881613cbd565b6000602080838503121561369e578182fd5b823567ffffffffffffffff808211156136b5578384fd5b818501915085601f8301126136c8578384fd5b8135818111156136da576136da613c92565b6136ec601f8201601f19168501613b76565b91508082528684828501011115613701578485fd5b80848401858401378101909201929092529392505050565b60006020828403121561372a578081fd5b5035919050565b600060208284031215613742578081fd5b5051919050565b6000806040838503121561375b578182fd5b50508035926020909101359150565b60008060006060848603121561377e578081fd5b505081359360208301359350604090920135919050565b6000806000604084860312156137a9578081fd5b833560ff811681146137b9578182fd5b9250602084013567ffffffffffffffff8111156137d4578182fd5b61362d8682870161319a565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff831115613811578081fd5b8260051b80836020870137939093016020019283525090919050565b6000815180845260208085019450808401835b8381101561385c57815187529582019590820190600101613840565b509495945050505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b600081518084526138a8816020860160208601613c15565b601f01601f19169290920160200192915050565b600081516138ce818560208601613c15565b9290920192915050565b600082516138ea818460208701613c15565b9190910192915050565b600080845482600182811c91508083168061391057607f831692505b602080841082141561393057634e487b7160e01b87526022600452602487fd5b818015613944576001811461395557613981565b60ff19861689528489019650613981565b60008b815260209020885b868110156139795781548b820152908501908301613960565b505084890196505b5050505050506139bd61399482866138bc565b7f2e6a736f6e000000000000000000000000000000000000000000000000000000815260050190565b95945050505050565b60006001600160a01b03808b168352808a1660208401525060a060408301526139f360a08301888a6137e0565b8281036060840152613a068187896137e0565b90508281036080840152613a1b818587613867565b9b9a5050505050505050505050565b60006001600160a01b03808816835280871660208401525060a06040830152613a5660a083018661382d565b8281036060840152613a68818661382d565b90508281036080840152613a7c8185613890565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152613ac060a0830184613890565b979650505050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a06080830152613a7c60a083018486613867565b604081526000613b186040830186886137e0565b8281036020840152613ac08185876137e0565b6020815260006132d8602083018461382d565b604081526000613b51604083018561382d565b82810360208401526139bd818561382d565b6020815260006132d86020830184613890565b604051601f8201601f1916810167ffffffffffffffff81118282101715613b9f57613b9f613c92565b604052919050565b60008219821115613bba57613bba613c7c565b500190565b600082613bda57634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615613bf957613bf9613c7c565b500290565b600082821015613c1057613c10613c7c565b500390565b60005b83811015613c30578181015183820152602001613c18565b83811115611cd65750506000910152565b600181811c90821680613c5557607f821691505b60208210811415613c7657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461255157600080fd5b6001600160e01b03198116811461255157600080fdfea164736f6c6343000804000a";

type ERC1155WhitelistConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155WhitelistConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Whitelist__factory extends ContractFactory {
  constructor(...args: ERC1155WhitelistConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Whitelist> {
    return super.deploy(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    ) as Promise<ERC1155Whitelist>;
  }
  override getDeployTransaction(
    __uri: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _maxSupply: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      __uri,
      _price,
      _maxSupply,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Whitelist {
    return super.attach(address) as ERC1155Whitelist;
  }
  override connect(signer: Signer): ERC1155Whitelist__factory {
    return super.connect(signer) as ERC1155Whitelist__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155WhitelistInterface {
    return new utils.Interface(_abi) as ERC1155WhitelistInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Whitelist {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Whitelist;
  }
}
