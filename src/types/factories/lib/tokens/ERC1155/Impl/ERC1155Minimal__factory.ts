/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  ERC1155Minimal,
  ERC1155MinimalInterface,
} from "../../../../../lib/tokens/ERC1155/Impl/ERC1155Minimal";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_tokenURI",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        internalType: "contract SplitterImpl",
        name: "_splitter",
        type: "address",
      },
      {
        internalType: "uint96",
        name: "_fraction",
        type: "uint96",
      },
      {
        internalType: "address",
        name: "_router",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidId",
    type: "error",
  },
  {
    inputs: [],
    name: "NotMinted",
    type: "error",
  },
  {
    inputs: [],
    name: "PublicMintOff",
    type: "error",
  },
  {
    inputs: [],
    name: "WrongPrice",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "newPublicMintState",
        type: "bool",
      },
    ],
    name: "PublicMintStateSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "newRoyaltyFee",
        type: "uint256",
      },
    ],
    name: "RoyaltyFeeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newRecipient",
        type: "address",
      },
    ],
    name: "RoyaltyRecipientSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "bal",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "owners",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "balances",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "price",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "publicMintState",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salePrice",
        type: "uint256",
      },
    ],
    name: "royaltyInfo",
    outputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "royaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "_publicMintState",
        type: "bool",
      },
    ],
    name: "setPublicMintState",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "splitter",
    outputs: [
      {
        internalType: "contract SplitterImpl",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620020373803806200203783398101604081905262000034916200021d565b600480546001600160a01b0319166001600160a01b0383169081179091556040518291906000907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a35084516200009690600790602088019062000142565b506006849055600580546001600160a01b0385166001600160a01b031991821681179092556001600160601b03841660028190556003805490921690921790556040517fc36422dcc77a5c93a5c48743078f8130c9fcc2a0ff893904ee62a3565688117c90600090a26003546040516001600160a01b03909116907f2a5a1009e36beb67c3a1ada61dd1343d7e9ec62c70965492fbaa06234f8316b190600090a250505050506200038b565b828054620001509062000338565b90600052602060002090601f016020900481019282620001745760008555620001bf565b82601f106200018f57805160ff1916838001178555620001bf565b82800160010185558215620001bf579182015b82811115620001bf578251825591602001919060010190620001a2565b50620001cd929150620001d1565b5090565b5b80821115620001cd5760008155600101620001d2565b80516001600160a01b03811681146200020057600080fd5b919050565b80516001600160601b03811681146200020057600080fd5b600080600080600060a0868803121562000235578081fd5b85516001600160401b03808211156200024c578283fd5b818801915088601f83011262000260578283fd5b81518181111562000275576200027562000375565b604051601f8201601f19908116603f01168101908382118183101715620002a057620002a062000375565b81604052828152602093508b84848701011115620002bc578586fd5b8591505b82821015620002df5784820184015181830185015290830190620002c0565b82821115620002f057858484830101525b80995050505080880151955050506200030c60408701620001e8565b92506200031c6060870162000205565b91506200032c60808701620001e8565b90509295509295909350565b600181811c908216806200034d57607f821691505b602082108114156200036f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611c9c806200039b6000396000f3fe60806040526004361061017f5760003560e01c806344df8e70116100d6578063a22cb4651161007f578063f23a6e6111610059578063f23a6e61146104ae578063f242432a146104db578063f4f3b200146104fb57600080fd5b8063a22cb4651461040e578063bc197c811461042e578063e985e9c51461047657600080fd5b8063879fbedf116100b0578063879fbedf146103b85780638da5cb5b146103d8578063a035b1fe146103f857600080fd5b806344df8e70146103405780634e1273f4146103555780636352211e1461038257600080fd5b806326092b83116101385780633ccfd60b116101125780633ccfd60b146102d35780633cd8045e146102e857806340d097c31461032057600080fd5b806326092b831461026c5780632a55205a146102745780632eb2c2d6146102b357600080fd5b80630e89341c116101695780630e89341c146101fe57806313af40351461022b57806322ab47a11461024d57600080fd5b8062fdd58e1461018457806301ffc9a7146101ce575b600080fd5b34801561019057600080fd5b506101bb61019f36600461187c565b6000908152600160205260409020546001600160a01b03161490565b6040519081526020015b60405180910390f35b3480156101da57600080fd5b506101ee6101e936600461192a565b61051b565b60405190151581526020016101c5565b34801561020a57600080fd5b5061021e610219366004611962565b610588565b6040516101c59190611bcb565b34801561023757600080fd5b5061024b6102463660046116c1565b610660565b005b34801561025957600080fd5b506008546101ee90610100900460ff1681565b61024b6106fa565b34801561028057600080fd5b5061029461028f366004611992565b610799565b604080516001600160a01b0390931683526020830191909152016101c5565b3480156102bf57600080fd5b5061024b6102ce36600461171c565b6107cf565b3480156102df57600080fd5b5061024b610b4f565b3480156102f457600080fd5b50600554610308906001600160a01b031681565b6040516001600160a01b0390911681526020016101c5565b34801561032c57600080fd5b5061024b61033b3660046116c1565b610ba2565b34801561034c57600080fd5b5061024b610c41565b34801561036157600080fd5b506103756103703660046118a7565b610c94565b6040516101c59190611b87565b34801561038e57600080fd5b5061030861039d366004611962565b6001602052600090815260409020546001600160a01b031681565b3480156103c457600080fd5b5061024b6103d3366004611910565b610dec565b3480156103e457600080fd5b50600454610308906001600160a01b031681565b34801561040457600080fd5b506101bb60065481565b34801561041a57600080fd5b5061024b610429366004611851565b610e84565b34801561043a57600080fd5b5061045d61044936600461171c565b63bc197c8160e01b98975050505050505050565b6040516001600160e01b031990911681526020016101c5565b34801561048257600080fd5b506101ee6104913660046116e4565b600060208181529281526040808220909352908152205460ff1681565b3480156104ba57600080fd5b5061045d6104c93660046117d7565b63f23a6e6160e01b9695505050505050565b3480156104e757600080fd5b5061024b6104f63660046117d7565b610eee565b34801561050757600080fd5b5061024b6105163660046116c1565b6111a1565b60006301ffc9a760e01b6001600160e01b03198316148061054c5750636cdb3d1360e11b6001600160e01b03198316145b8061056757506303a24d0760e21b6001600160e01b03198316145b80610582575063152a902d60e11b6001600160e01b03198316145b92915050565b6060816001146105ab57604051631bf4348160e31b815260040160405180910390fd5b60085460ff166105ce57604051634d5e5fb360e01b815260040160405180910390fd5b600780546105db90611c29565b80601f016020809104026020016040519081016040528092919081815260200182805461060790611c29565b80156106545780601f1061062957610100808354040283529160200191610654565b820191906000526020600020905b81548152906001019060200180831161063757829003601f168201915b50505050509050919050565b6004546001600160a01b031633146106ae5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b600480546001600160a01b0319166001600160a01b03831690811790915560405133907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d7690600090a350565b600854610100900460ff166107225760405163287588a160e11b815260040160405180910390fd5b60065434146107445760405163f7760f2560e01b815260040160405180910390fd5b60085460ff1615156001141561076d57604051631bbdf5c560e31b815260040160405180910390fd5b6008805460ff1916600190811790915560408051602081019091526000815261079791339161126e565b565b6003546002546001600160a01b0390911690600090612710906107bc9085611bfe565b6107c69190611bde565b90509250929050565b8483146108105760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106a5565b336001600160a01b038916148061084857506001600160a01b03881660009081526020818152604080832033845290915290205460ff165b6108855760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106a5565b60008060005b878110156109b0578888828181106108b357634e487b7160e01b600052603260045260246000fd5b9050602002013592508686828181106108dc57634e487b7160e01b600052603260045260246000fd5b600086815260016020908152604090912054910292909201359350506001600160a01b038c811691161461093f5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106a5565b816001146109805760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106a5565b600083815260016020819052604090912080546001600160a01b0319166001600160a01b038d161790550161088b565b50886001600160a01b03168a6001600160a01b0316336001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8b8b8b8b604051610a049493929190611b60565b60405180910390a46001600160a01b0389163b15610af95760405163bc197c8160e01b808252906001600160a01b038b169063bc197c8190610a589033908f908e908e908e908e908e908e90600401611a74565b602060405180830381600087803b158015610a7257600080fd5b505af1158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaa9190611946565b6001600160e01b03191614610af45760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106a5565b610b43565b6001600160a01b038916610b435760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106a5565b50505050505050505050565b6004546001600160a01b03163314610b985760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106a5565b610797324761146f565b6004546001600160a01b03163314610beb5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106a5565b60085460ff16151560011415610c1457604051631bbdf5c560e31b815260040160405180910390fd5b6008805460ff19166001908117909155604080516020810190915260008152610c3e91839161126e565b50565b6004546001600160a01b03163314610c8a5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106a5565b61079760016114ca565b6060838214610cd75760405162461bcd60e51b815260206004820152600f60248201526e0988a9c8ea890be9a92a69a82a8869608b1b60448201526064016106a5565b8367ffffffffffffffff811115610cfe57634e487b7160e01b600052604160045260246000fd5b604051908082528060200260200182016040528015610d27578160200160208202803683370190505b50905060005b84811015610de357610db0868683818110610d5857634e487b7160e01b600052603260045260246000fd5b9050602002016020810190610d6d91906116c1565b858584818110610d8d57634e487b7160e01b600052603260045260246000fd5b905060200201356000908152600160205260409020546001600160a01b03161490565b828281518110610dd057634e487b7160e01b600052603260045260246000fd5b6020908102919091010152600101610d2d565b50949350505050565b6004546001600160a01b03163314610e355760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106a5565b6008805461ff0019166101008315158102919091179182905560405160ff91909204161515907f2f3b349e2956d565a50532dcc875a49be7f558411642122cf5e50ca9b4bb14e690600090a250565b336000818152602081815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b336001600160a01b0387161480610f2657506001600160a01b03861660009081526020818152604080832033845290915290205460ff165b610f635760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064016106a5565b6000848152600160205260409020546001600160a01b03878116911614610fb95760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b60448201526064016106a5565b82600114610ffa5760405162461bcd60e51b815260206004820152600e60248201526d1253959053125117d05353d5539560921b60448201526064016106a5565b60008481526001602090815260409182902080546001600160a01b0319166001600160a01b038981169182179092558351888152928301879052929089169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0385163b1561114f5760405163f23a6e6160e01b808252906001600160a01b0387169063f23a6e61906110ae9033908b908a908a908a908a90600401611b1b565b602060405180830381600087803b1580156110c857600080fd5b505af11580156110dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111009190611946565b6001600160e01b0319161461114a5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106a5565b611199565b6001600160a01b0385166111995760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106a5565b505050505050565b6004546001600160a01b031633146111ea5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064016106a5565b6040516370a0823160e01b8152306004820152610c3e90829032906001600160a01b038316906370a082319060240160206040518083038186803b15801561123157600080fd5b505afa158015611245573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611269919061197a565b611596565b6000828152600160205260409020546001600160a01b0316156112d35760405162461bcd60e51b815260206004820152600e60248201527f414c52454144595f4d494e54454400000000000000000000000000000000000060448201526064016106a5565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b03891690811790915581518781529283019390935291929133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46001600160a01b0383163b156114255760405163f23a6e6160e01b808252906001600160a01b0385169063f23a6e619061138490339060009088906001908990600401611ad8565b602060405180830381600087803b15801561139e57600080fd5b505af11580156113b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113d69190611946565b6001600160e01b031916146114205760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b60448201526064016106a5565b505050565b6001600160a01b0383166114205760405162461bcd60e51b81526020600482015260116024820152701253959053125117d49150d25412515395607a1b60448201526064016106a5565b600080600080600085875af19050806114205760405162461bcd60e51b815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016106a5565b6000818152600160205260409020546001600160a01b03168061152f5760405162461bcd60e51b815260206004820152600a60248201527f4e4f545f4d494e5445440000000000000000000000000000000000000000000060448201526064016106a5565b600082815260016020818152604080842080546001600160a01b03191690558051868152918201929092526001600160a01b0384169133917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a45050565b600060405163a9059cbb60e01b8152836004820152826024820152602060006044836000895af13d15601f3d116001600051141617169150508061161c5760405162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c4544000000000000000000000000000000000060448201526064016106a5565b50505050565b60008083601f840112611633578182fd5b50813567ffffffffffffffff81111561164a578182fd5b6020830191508360208260051b850101111561166557600080fd5b9250929050565b8035801515811461167c57600080fd5b919050565b60008083601f840112611692578182fd5b50813567ffffffffffffffff8111156116a9578182fd5b60208301915083602082850101111561166557600080fd5b6000602082840312156116d2578081fd5b81356116dd81611c64565b9392505050565b600080604083850312156116f6578081fd5b823561170181611c64565b9150602083013561171181611c64565b809150509250929050565b60008060008060008060008060a0898b031215611737578384fd5b883561174281611c64565b9750602089013561175281611c64565b9650604089013567ffffffffffffffff8082111561176e578586fd5b61177a8c838d01611622565b909850965060608b0135915080821115611792578586fd5b61179e8c838d01611622565b909650945060808b01359150808211156117b6578384fd5b506117c38b828c01611681565b999c989b5096995094979396929594505050565b60008060008060008060a087890312156117ef578182fd5b86356117fa81611c64565b9550602087013561180a81611c64565b94506040870135935060608701359250608087013567ffffffffffffffff811115611833578283fd5b61183f89828a01611681565b979a9699509497509295939492505050565b60008060408385031215611863578182fd5b823561186e81611c64565b91506107c66020840161166c565b6000806040838503121561188e578182fd5b823561189981611c64565b946020939093013593505050565b600080600080604085870312156118bc578384fd5b843567ffffffffffffffff808211156118d3578586fd5b6118df88838901611622565b909650945060208701359150808211156118f7578384fd5b5061190487828801611622565b95989497509550505050565b600060208284031215611921578081fd5b6116dd8261166c565b60006020828403121561193b578081fd5b81356116dd81611c79565b600060208284031215611957578081fd5b81516116dd81611c79565b600060208284031215611973578081fd5b5035919050565b60006020828403121561198b578081fd5b5051919050565b600080604083850312156119a4578182fd5b50508035926020909101359150565b81835260007f07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8311156119e4578081fd5b8260051b80836020870137939093016020019283525090919050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60008151808452815b81811015611a4e57602081850181015186830182015201611a32565b81811115611a5f5782602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808b168352808a1660208401525060a06040830152611aa160a08301888a6119b3565b8281036060840152611ab48187896119b3565b90508281036080840152611ac9818587611a00565b9b9a5050505050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152611b1060a0830184611a29565b979650505050505050565b60006001600160a01b03808916835280881660208401525085604083015284606083015260a06080830152611b5460a083018486611a00565b98975050505050505050565b604081526000611b746040830186886119b3565b8281036020840152611b108185876119b3565b6020808252825182820181905260009190848201906040850190845b81811015611bbf57835183529284019291840191600101611ba3565b50909695505050505050565b6020815260006116dd6020830184611a29565b600082611bf957634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611c2457634e487b7160e01b81526011600452602481fd5b500290565b600181811c90821680611c3d57607f821691505b60208210811415611c5e57634e487b7160e01b600052602260045260246000fd5b50919050565b6001600160a01b0381168114610c3e57600080fd5b6001600160e01b031981168114610c3e57600080fdfea164736f6c6343000804000a";

type ERC1155MinimalConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155MinimalConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155Minimal__factory extends ContractFactory {
  constructor(...args: ERC1155MinimalConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC1155Minimal> {
    return super.deploy(
      _tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    ) as Promise<ERC1155Minimal>;
  }
  override getDeployTransaction(
    _tokenURI: PromiseOrValue<string>,
    _price: PromiseOrValue<BigNumberish>,
    _splitter: PromiseOrValue<string>,
    _fraction: PromiseOrValue<BigNumberish>,
    _router: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenURI,
      _price,
      _splitter,
      _fraction,
      _router,
      overrides || {}
    );
  }
  override attach(address: string): ERC1155Minimal {
    return super.attach(address) as ERC1155Minimal;
  }
  override connect(signer: Signer): ERC1155Minimal__factory {
    return super.connect(signer) as ERC1155Minimal__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155MinimalInterface {
    return new utils.Interface(_abi) as ERC1155MinimalInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Minimal {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Minimal;
  }
}
